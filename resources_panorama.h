#pragma once
char mainmenu_news_js[] = "'use strict';\n"
"\n"
"var NewsPanel = (function () {\n"
"\n"
"\tvar _GetRssFeed = function()\n"
"\t{\n"
"\t\tBlogAPI.RequestRSSFeed();\n"
"\t}\n"
"\n"
"\tvar _OnRssFeedReceived = function( feed )\n"
"\t{\n"
"\t\t                                          \n"
"\t\tvar elLister = $.GetContextPanel().FindChildInLayoutFile( 'NewsPanelLister' );\n"
"\n"
"\t\tif ( elLister === undefined || elLister === null || !feed )\n"
"\t\t\treturn;\n"
"\n"
"\t\telLister.RemoveAndDeleteChildren();\n"
"\n"
"\t\tfeed[ 'items' ].forEach( function( item, i )\n"
"\t\t{\n"
"\t\t\tvar elEntry = $.CreatePanel( 'Panel', elLister, 'NewEntry' + i, {\n"
"\t\t\t\tacceptsinput: true,\n"
"\t\t\t\tonactivate: 'SteamOverlayAPI.OpenURL( \"' + item.link + '\" );'\n"
"\t\t\t} );\n"
"\t\t\telEntry.BLoadLayoutSnippet( 'news-full-entry' );\n"
"\t\t\telEntry.FindChildInLayoutFile( 'NewsHeaderImage' ).SetImage( item.imageUrl );\n"
"\n"
"\t\t\tvar elEntryInfo = $.CreatePanel( 'Panel', elEntry, 'NewsInfo' + i );\n"
"\t\t\telEntryInfo.BLoadLayoutSnippet( 'news-info' );\n"
"\n"
"\t\t\telEntryInfo.SetDialogVariable( 'news_item_date', item.date );\n"
"\t\t\telEntryInfo.SetDialogVariable( 'news_item_title', item.title );\n"
"\t\t\telEntryInfo.SetDialogVariable( 'news_item_body', item.description );\n"
"\n"
"\t\t\t         \n"
"\t\t\telEntry.FindChildInLayoutFile( 'NewsEntryBlurTarget' ).AddBlurPanel( elEntryInfo );\n"
"\t\t} );\n"
"\t};\n"
"\n"
"\tvar _OnSteamIsPlaying = function()\n"
"\t{\n"
"\t\t$.GetContextPanel().SetHasClass( 'news-panel-style-short-entires', EmbeddedStreamAPI.IsVideoPlaying() );\n"
"\t};\n"
"\n"
"\tvar _ResetNewsEntryStyle = function()\n"
"\t{\n"
"\t\t$.GetContextPanel().RemoveClass( 'news-panel-style-short-entires' );\n"
"\t};\n"
"\n"
"\treturn {\n"
"\t\tGetRssFeed\t\t\t: _GetRssFeed,\n"
"\t\tOnRssFeedReceived: _OnRssFeedReceived,\n"
"\t\tOnSteamIsPlaying: _OnSteamIsPlaying,\n"
"\t\tResetNewsEntryStyle: _ResetNewsEntryStyle\n"
"\t};\n"
"})();\n"
"\n"
"\n"
"(function () {\n"
"\t/*NewsPanel.GetRssFeed();\n"
"\t$.RegisterForUnhandledEvent( \"PanoramaComponent_Blog_RSSFeedReceived\", NewsPanel.OnRssFeedReceived );\n"
"\t$.RegisterForUnhandledEvent( \"PanoramaComponent_EmbeddedStream_VideoPlaying\", NewsPanel.OnSteamIsPlaying );\n"
"\t$.RegisterForUnhandledEvent( \"StreamPanelClosed\", NewsPanel.ResetNewsEntryStyle );*/\n"
"})();";


char mainmenu_news_css[] = "\n"
"                                                  \n"
"\n"
"@define news-image-width: 671px;\n"
"\n"
".news-panel\n"
"{\n"
"\t                                           \n"
"\t\n"
"\twidth: 0%;\n"
"\theight: fill-parent-flow( .75 );\n"
"\tbackground-color: blurBackgroundColor;\n"
"\tmargin-bottom: 0px;\n"
"\tflow-children: down;\n"
"\n"
"\ttransition-property: height;\n"
"\ttransition-duration: .25s;\n"
"\ttransition-timing-function: ease-in-out;\n"
"}\n"
"\n"
".news-panel.news-panel-style-short-entires\n"
"{\n"
"\theight: fill-parent-flow( .25 );\n"
"}\n"
"\n"
".news-panel.news-panel-style-feature-panel-visible \n"
"{\n"
"\theight: fill-parent-flow( .20 );\n"
"}\n"
"\n"
".news-panel-navbar\n"
"{\n"
"\theight: 0px;\n"
"\tflow-children: right;\n"
"\twidth: 0%;\n"
"\tborder-bottom: 1px solid rgba(255, 255, 255, 0.25);\n"
"\tmargin: 0px 16px;\n"
"}\n"
"\n"
".news-panel-navbar .RadioBox\n"
"{\n"
"\tvisibility: collapse;\n"
"}\n"
"\n"
".news-panel-navbar-btn\n"
"{\n"
"\theight: 0%;\n"
"\twidth: fit-children;\n"
"\tmargin: 0px 0px 0px 0px;\n"
"\tvertical-align: center;\n"
"\tbackground-color: gradient( linear, 0% 100%, 0% 99%, from( white ), color-stop( 0, #ffffff00 ), to( #ffffff00 ) );\n"
"\tsound-trans: \"\";\n"
"}\n"
"\n"
".news-panel-navbar Label\n"
"{\n"
"\tmargin: 0px;\n"
"\tfont-size: 18px;\n"
"\tfont-weight: medium;\n"
"\tcolor: white;\n"
"\tvertical-align: center;\n"
"\tfont-family: Stratum2, 'Arial Unicode MS';\n"
"}\n"
"\n"
".news-panel__list\n"
"{\n"
"\tflow-children: down;\n"
"\twidth: 0%;\n"
"\tpadding: 0px 16px;\n"
"\tmargin-bottom: 16px;\n"
"\theight: fit-children;\n"
"}\n"
"\n"
".news-entry\n"
"{\n"
"\twidth: 0%;\n"
"\theight: fit-children;\n"
"\tmargin: 0px 0px 0px 0px;\n"
"\tborder: 1px solid rgba(0, 0, 0, 0.363);\n"
"\tbox-shadow: fill #000000aa 0px 0px 8px 4px;\n"
"}\n"
"\n"
".news-panel-style-short-entires .news-entry,\n"
".news-panel-style-feature-panel-visible .news-entry\n"
"{\n"
"\tbox-shadow: none;\n"
"\tbackground-color:rgba(0, 0, 0, 0.5);\n"
"\tborder: 0px solid rgba(0, 0, 0, 0.363);\n"
"}\n"
"\n"
".news-panel-style-feature-panel-visible .news-entry\n"
"{\n"
"\tbackground-color:rgba(0, 0, 0, 0.0);\n"
"}\n"
"\n"
".news-entry:hover .news-entry__image\n"
"{\n"
"\ttransform: scale3d( 1.05, 1.05, 1.05 );\n"
"\n"
"\ttransition-property: transform;\n"
"\ttransition-duration: .25s;\n"
"\ttransition-timing-function: ease-in-out;\n"
"}\n"
"\n"
".news-entry__image\n"
"{\n"
"\twidth: news-image-width;\n"
"\tvertical-align: top;\n"
"\thorizontal-align: middle;\n"
"\n"
"\ttransition-property: transform, height;\n"
"\ttransition-duration: .25s;\n"
"\ttransition-timing-function: ease-in-out;\n"
"}\n"
"\n"
".news-panel-style-short-entires .news-entry__image,\n"
".news-panel-style-feature-panel-visible .news-entry__image\n"
"{\n"
"\twidth: 0px;\n"
"\tvertical-align: center;\n"
"}\n"
"\n"
".news-entry__image--blur\n"
"{\n"
"\tblur: fastgaussian( 8, 8, 5);\n"
"}\n"
"\n"
".news-entry__info\n"
"{\n"
"\tflow-children: down;\n"
"\tvertical-align: bottom;\n"
"\tz-index: 0;\n"
"\tpadding: 0px;\n"
"\tbackground-color:rgba(0, 0, 0, 0.5);\n"
"\n"
"\ttransition-property: background-color, height;\n"
"\ttransition-duration: .25s;\n"
"\ttransition-timing-function: ease-in-out;\n"
"}\n"
"\n"
".news-panel-style-short-entires .news-entry__info,\n"
".news-panel-style-feature-panel-visible .news-entry__info\n"
"{\n"
"\tmargin-left: 0px;\n"
"\tpadding: 0px 0px;\n"
"\theight: 0%;\n"
"\tvertical-align: center;\n"
"\tbackground-color: none;\n"
"}\n"
"\n"
".news-entry:hover .news-entry__info\n"
"{\n"
"\tbackground-color:rgba(0, 0, 0, 0.2);\n"
"\n"
"\ttransition-property: background-color;\n"
"\ttransition-duration: .25s;\n"
"\ttransition-timing-function: ease-in-out;\n"
"}\n"
"\n"
".news-entry__title\n"
"{\n"
"\tmargin-top: 0px;\n"
"\tfont-size: 0px;\n"
"\tfont-weight: Bold;\n"
"\tcolor:white;\n"
"}\n"
"\n"
".news-panel-style-short-entires .news-entry__title,\n"
".news-panel-style-feature-panel-visible .news-entry__title\n"
"{\n"
"\tfont-size: 0px;\n"
"\tmargin-top: 0px;\n"
"}\n"
"\n"
".news-entry__body\n"
"{\n"
"\tmargin-top: 0px;\n"
"\tfont-size: 0px;\n"
"\tcolor: white;\n"
"\tmax-height: 0px;\n"
"\ttext-overflow: ellipsis;\n"
"}\n"
"\n"
".news-panel-style-short-entires .news-entry__body,\n"
".news-panel-style-short-entires .news-entry__details,\n"
".news-panel-style-feature-panel-visible .news-entry__body,\n"
".news-panel-style-feature-panel-visible .news-entry__details\n"
"{\n"
"\tfont-size: 0px;\n"
"\tmargin-top: 0px;\n"
"}\n"
"\n"
".news-entry__details\n"
"{\n"
"\tfont-size: 0px;\n"
"\tcolor:white;\n"
"\ttext-transform: uppercase;\n"
"\tfont-weight: Bold;\n"
"}\n"
"   ";

char mainmenu_js[] = "\"use strict\";\n"
"\n"
"                                                                                                    \n"
"                                        \n"
"                                                                                                    \n"
"\n"
"var MainMenu = ( function() {\n"
"\tvar _m_bPerfectWorld = ( MyPersonaAPI.GetLauncherType() === \"perfectworld\" );\n"
"\tvar _m_activeTab;\n"
"\tvar _m_sideBarElementContextMenuActive = false;\n"
"\tvar _m_elContentPanel = $( '#JsMainMenuContent' );\n"
"\tvar _m_playedInitalFadeUp = false;\n"
"\n"
"\t               \n"
"\tvar _m_elNotificationsContainer = $( '#NotificationsContainer' );\n"
"\tvar _m_notificationSchedule = false;\n"
"\tvar _m_bVanityAnimationAlreadyStarted = false;\n"
"\tvar _m_bHasPopupNotification = false;\n"
"\tvar _m_tLastSeenDisconnectedFromGC = 0;\n"
"\tvar _m_NotificationBarColorClasses = [\n"
"\t\t\"NotificationRed\", \"NotificationYellow\", \"NotificationGreen\", \"NotificationLoggingOn\"\n"
"\t];\n"
"\n"
"\tvar _m_storePopupElement = null;\n"
"\tvar m_TournamentPickBanPopup = null;\n"
"\n"
"\tvar _OnInitFadeUp = function()\n"
"\t{\n"
"\t\tif( !_m_playedInitalFadeUp )\n"
"\t\t{\n"
"\t\t\t$( '#MainMenuContainerPanel' ).TriggerClass( 'show' );\n"
"\t\t\t_m_playedInitalFadeUp = true;\n"
"\t\t}\n"
"\t};\n"
"\n"
"\tvar _SetBackgroundMovie = function()\n"
"\t{\n"
"\t\tvar videoPlayer = $( '#MainMenuMovie' );\n"
"\t\tvar defaultMovie = 'nuke';\n"
"\n"
"\t\t                                                                 \n"
"\t\tvar overrideMovie = 'blacksite';\n"
"\t\tvar backgroundMovie = overrideMovie;\n"
"\n"
"\t\t                                                            \n"
"\t\t                                                                                   \n"
"\n"
"\t\t                                                                                     \n"
"\t\tvideoPlayer.SetAttributeString( 'data-type', backgroundMovie );\n"
"\n"
"\t\t                          \n"
"\t\tvideoPlayer.SetMovie( \"file://{resources}/videos/\" + backgroundMovie + \".webm\" );\n"
"\t\tvideoPlayer.SetSound( 'UIPanorama.BG_' + backgroundMovie );\n"
"\t\tvideoPlayer.Play();\n"
"\t};\n"
"\n"
"\tvar _OnShowMainMenu = function()\n"
"\t{\n"
"\t\t$.DispatchEvent('PlayMainMenuMusic', true, true );\n"
"\n"
"\t\t                                         \n"
"\t\tGameInterfaceAPI.SetSettingString( 'panorama_play_movie_ambient_sound', '1' );\n"
"\n"
"\t\t                                                                  \n"
"\t\t                                          \n"
"\t\tGameInterfaceAPI.SetSettingString( 'dsp_room', '29' );\n"
"\t\tGameInterfaceAPI.SetSettingString( 'snd_soundmixer', 'MainMenu_Mix' );\n"
"\n"
"\t\t_m_bVanityAnimationAlreadyStarted = false;                                               \n"
"\t\t_InitVanity();\n"
"\t\t_OnInitFadeUp();\n"
"\t\t_SetBackgroundMovie();\n"
"\n"
"\t\t                                                   \n"
"\t\t$( '#MainMenuNavBarPlay' ).SetHasClass( 'mainmenu-navbar__btn-small--hidden', false );\n"
"\n"
"\t\t                                                    \n"
"\t\t_UpdateOverwatch();\n"
"\n"
"\t\t_UpdateNotifications();\n"
"\t\t_ShowWeaponUpdatePopup();\n"
"\n"
"\t\t                              \n"
"\t\t_GcLogonNotificationReceived();\n"
"\n"
"\t\t                                                                          \n"
"\t\t_DeleteSurvivalEndOfMatch();\n"
"\t};\n"
"\n"
"\tvar _TournamentDraftUpdate = function ()\n"
"\t{\n"
"\t\tif ( !m_TournamentPickBanPopup || !m_TournamentPickBanPopup.IsValid() )\n"
"\t\t{\n"
"\t\t\tm_TournamentPickBanPopup = UiToolkitAPI.ShowCustomLayoutPopup( 'tournament_pickban_popup', 'file://{resources}/layout/popups/popup_tournament_pickban.xml' );\n"
"\t\t}\n"
"\t}\n"
"\n"
"\tvar _m_bGcLogonNotificationReceivedOnce = false;\n"
"\tvar _GcLogonNotificationReceived = function()\n"
"\t{\n"
"\t\tif ( _m_bGcLogonNotificationReceivedOnce ) return;\n"
"\t\t\n"
"\t\tvar strFatalError = MyPersonaAPI.GetClientLogonFatalError();\n"
"\t\tif ( strFatalError )\n"
"\t\t{\n"
"\t\t\t_m_bGcLogonNotificationReceivedOnce = true;\n"
"\n"
"\t\t\tif ( strFatalError === \"ShowGameLicenseNeedToLinkAccountsWithMoreInfo\" )\n"
"\t\t\t{\n"
"\t\t\t\tUiToolkitAPI.ShowGenericPopupThreeOptionsBgStyle( \"#CSGO_Purchasable_Game_License_Short\", \"#SFUI_LoginLicenseAssist_PW_NeedToLinkAccounts_WW_hint\", \"\",\n"
"\t\t\t\t\t\"#UI_Yes\", function() { SteamOverlayAPI.OpenURL( \"https://community.csgo.com.cn/join/pwlink_csgo\" ); },\n"
"\t\t\t\t\t\"#UI_No\", function() {},\n"
"\t\t\t\t\t\"#ShowFAQ\", function() { _OnGcLogonNotificationReceived_ShowFaqCallback(); },\n"
"\t\t\t\t\t\"dim\" );\n"
"\t\t\t}\n"
"\t\t\telse if ( strFatalError === \"ShowGameLicenseNeedToLinkAccounts\" )\n"
"\t\t\t{\n"
"\t\t\t\t_OnGcLogonNotificationReceived_ShowLicenseYesNoBox( \"#SFUI_LoginLicenseAssist_PW_NeedToLinkAccounts\", \"https://community.csgo.com.cn/join/pwlink_csgo\" );\n"
"\t\t\t}\n"
"\t\t\telse if ( strFatalError === \"ShowGameLicenseHasLicensePW\" )\n"
"\t\t\t{\n"
"\t\t\t\t_OnGcLogonNotificationReceived_ShowLicenseYesNoBox( \"#SFUI_LoginLicenseAssist_HasLicense_PW\", \"https://community.csgo.com.cn/join/pwlink_csgo?needlicense=1\" );\n"
"\t\t\t}\n"
"\t\t\telse if ( strFatalError === \"ShowGameLicenseNoOnlineLicensePW\" )\n"
"\t\t\t{\n"
"\t\t\t\t                                                                                 \n"
"\t\t\t\t                                                                                     \n"
"\t\t\t\t                                 \n"
"\t\t\t\t                                                                                                                                                           \n"
"\t\t\t}\n"
"\t\t\telse if ( strFatalError === \"ShowGameLicenseNoOnlineLicense\" )\n"
"\t\t\t{\n"
"\t\t\t\t                                                                                 \n"
"\t\t\t\t                                                                                     \n"
"\t\t\t\t                                 \n"
"\t\t\t\t                                                                                                                                                 \n"
"\t\t\t}\n"
"\t\t\telse\n"
"\t\t\t{\n"
"\t\t\t\tUiToolkitAPI.ShowGenericPopupOneOptionBgStyle( \"#SFUI_LoginPerfectWorld_Title_Error\", strFatalError, \"\",\n"
"\t\t\t\t\t\"#GameUI_Quit\", function() { GameInterfaceAPI.ConsoleCommand( \"quit\" ); },\n"
"\t\t\t\t\t\"dim\" );\n"
"\t\t\t}\n"
"\n"
"\t\t\treturn;\n"
"\t\t}\n"
"\t\t\n"
"\t\tvar nAntiAddictionTrackingState = MyPersonaAPI.GetTimePlayedTrackingState();\n"
"\t\tif ( nAntiAddictionTrackingState > 0 )\n"
"\t\t{\n"
"\t\t\t_m_bGcLogonNotificationReceivedOnce = true;\n"
"\n"
"\t\t\tvar pszDialogTitle = \"#SFUI_LoginPerfectWorld_Title_Info\";\n"
"\t\t\tvar pszDialogMessageText = \"#SFUI_LoginPerfectWorld_AntiAddiction1\";\n"
"\t\t\tvar pszOverlayUrlToOpen = null;\n"
"\t\t\tif ( nAntiAddictionTrackingState != 2                                        )\n"
"\t\t\t{\n"
"\t\t\t\tpszDialogMessageText = \"#SFUI_LoginPerfectWorld_AntiAddiction2\";\n"
"\t\t\t\tpszOverlayUrlToOpen = \"https://community.csgo.com.cn/join/pwcompleteaccountinfo\";\n"
"\t\t\t}\n"
"\t\t\tif ( pszOverlayUrlToOpen )\n"
"\t\t\t{\n"
"\t\t\t\tUiToolkitAPI.ShowGenericPopupYesNo( pszDialogTitle, pszDialogMessageText, \"\",\n"
"\t\t\t\t\tfunction() { SteamOverlayAPI.OpenURL( pszOverlayUrlToOpen ); },\n"
"\t\t\t\t\tfunction() {} \n"
"\t\t\t\t);\n"
"\t\t\t}\n"
"\t\t\telse\n"
"\t\t\t{\n"
"\t\t\t\tUiToolkitAPI.ShowGenericPopup( pszDialogTitle, pszDialogMessageText, \"\" );\n"
"\t\t\t}\n"
"\n"
"\t\t\treturn;\n"
"\t\t}\n"
"\t}\n"
"\n"
"\tvar _OnGcLogonNotificationReceived_ShowLicenseYesNoBox = function ( strTextMessage, pszOverlayUrlToOpen )\n"
"\t{\n"
"\t\t UiToolkitAPI.ShowGenericPopupTwoOptionsBgStyle( \"#CSGO_Purchasable_Game_License_Short\", strTextMessage, \"\",\n"
"\t\t\t\"#UI_Yes\", function() { SteamOverlayAPI.OpenURL( pszOverlayUrlToOpen ); },\n"
"\t\t\t\"#UI_No\", function() {},\n"
"\t\t\t\"dim\" );\n"
"\t}\n"
"\n"
"\tvar _OnGcLogonNotificationReceived_ShowFaqCallback = function ()\n"
"\t{\n"
"\t\t                         \n"
"\t\tSteamOverlayAPI.OpenURL( \"https://support.steampowered.com/kb_article.php?ref=6026-IFKZ-7043&l=schinese\" );\n"
"\n"
"\t\t                                                                     \n"
"\t\t_m_bGcLogonNotificationReceivedOnce = false;\n"
"\t\t_GcLogonNotificationReceived();\n"
"\t}\n"
"\n"
"\tvar _OnHideMainMenu = function ()\n"
"\t{\n"
"\t\t                        \n"
"\t\tvar vanityPanel = $( '#JsMainmenu_Vanity' );\n"
"\t\tif ( vanityPanel )\n"
"\t\t{\n"
"\t\t\tCharacterAnims.CancelScheduledAnim( vanityPanel );\n"
"\t\t}\n"
"\n"
"\t\t_CancelNotificationSchedule();\n"
"\n"
"\t\tUiToolkitAPI.CloseAllVisiblePopups();\n"
"\t};\n"
"\n"
"\tvar _OnShowPauseMenu = function()\n"
"\t{\n"
"\t\tvar elContextPanel = $.GetContextPanel();\n"
"\t\t\n"
"\t\telContextPanel.AddClass( 'MainMenuRootPanel--PauseMenuMode' );\n"
"\n"
"\t\tvar bMultiplayer = elContextPanel.IsMultiplayer();\n"
"\t\tvar bQueuedMatchmaking = GameStateAPI.IsQueuedMatchmaking();\n"
"\t\tvar bTraining = elContextPanel.IsTraining();\n"
"\t\tvar bGotvSpectating = elContextPanel.IsGotvSpectating();\n"
"\t\tvar bIsCommunityServer = !_m_bPerfectWorld && MatchStatsAPI.IsConnectedToCommunityServer();\n"
"\n"
"\t\t                                                                        \n"
"\t\t                                                                                                         \n"
"\t\t$( '#MainMenuNavBarPlay' ).SetHasClass( 'mainmenu-navbar__btn-small--hidden', true );\n"
"\n"
"\t\t$( '#MainMenuNavBarSwitchTeams' ).SetHasClass( 'mainmenu-navbar__btn-small--hidden', ( bTraining || bQueuedMatchmaking || bGotvSpectating ) );\n"
"\t\t\n"
"\t\t                                                          \n"
"\t\t                                                                                                                   \n"
"\t\t                                                                                                                                                 \n"
"\t\t$( '#MainMenuNavBarVote' ).SetHasClass( 'mainmenu-navbar__btn-small--hidden', ( bTraining ||                      bGotvSpectating ) );\n"
"\n"
"\t\t                                                                                        \n"
"\t\t$( '#MainMenuNavBarReportServer' ).SetHasClass( 'mainmenu-navbar__btn-small--hidden', !bIsCommunityServer );\n"
"\n"
"\t\t                                                                                           \n"
"\t\t$( '#MainMenuNavBarShowCommunityServerBrowser' ).SetHasClass( 'mainmenu-navbar__btn-small--hidden', !bIsCommunityServer );\n"
"\n"
"\t\t                                                            \n"
"\t\t_UpdateSurvivalEndOfMatchInstance();\n"
"\n"
"\t\t                \n"
"\t\t_OnHomeButtonPressed();\n"
"\t};\n"
"\n"
"\tvar _OnHidePauseMenu = function ()\n"
"\t{\n"
"\t\t$.GetContextPanel().RemoveClass( 'MainMenuRootPanel--PauseMenuMode' );\n"
"\n"
"\t\t_OnHomeButtonPressed();\n"
"\t};\n"
"\n"
"\tvar _BCheckTabCanBeOpenedRightNow = function( tab )\n"
"\t{\n"
"\t\tif ( tab === 'JsInventory' )\n"
"\t\t{\n"
"\t\t\tvar restrictions = LicenseUtil.GetCurrentLicenseRestrictions();\n"
"\t\t\tif ( restrictions !== false )\n"
"\t\t\t{\n"
"\t\t\t\tLicenseUtil.ShowLicenseRestrictions( restrictions );\n"
"\t\t\t\treturn false;\n"
"\t\t\t}\n"
"\t\t}\n"
"\n"
"\t\tif ( tab === 'JsInventory' )\n"
"\t\t{\n"
"\t\t\tif ( !MyPersonaAPI.IsInventoryValid() || !MyPersonaAPI.IsConnectedToGC() )\n"
"\t\t\t{\n"
"\t\t\t\t                                       \n"
"\t\t\t\tUiToolkitAPI.ShowGenericPopupOk(\n"
"\t\t\t\t\t$.Localize( '#SFUI_SteamConnectionErrorTitle' ),\n"
"\t\t\t\t\t$.Localize( '#SFUI_Steam_Error_LinkUnexpected' ),\n"
"\t\t\t\t\t'',\n"
"\t\t\t\t\tfunction() {},\n"
"\t\t\t\t\tfunction() {}\n"
"\t\t\t\t);\n"
"\t\t\t\treturn false;\n"
"\t\t\t}\n"
"\t\t}\n"
"\n"
"\t\t                          \n"
"\t\treturn true;\n"
"\t}\n"
"\n"
"\tvar _NavigateToTab = function( tab, XmlName )\n"
"\t{\n"
"\t\t                                                        \n"
"\t\t                                                   \n"
"\n"
"\t\tif ( !_BCheckTabCanBeOpenedRightNow( tab ) )\n"
"\t\t{\n"
"\t\t\t_OnHomeButtonPressed();\n"
"\t\t\treturn;\t                                                                               \n"
"\t\t}\n"
"\n"
"\t\t$.DispatchEvent('PlayMainMenuMusic', true, false );\n"
"\n"
"\t\t                                    \n"
"\t\tGameInterfaceAPI.SetSettingString( 'panorama_play_movie_ambient_sound', '0' );\n"
"\n"
"\t\t                                      \n"
"\t\t                            \n"
"\t\tif( !$.GetContextPanel().FindChildInLayoutFile( tab ) )\n"
"\t\t{\n"
"\t\t\tvar newPanel = $.CreatePanel('Panel', _m_elContentPanel, tab );\n"
"\t\t\t\n"
"\t\t\tnewPanel.Data().elMainMenuRoot = $.GetContextPanel();\n"
"\t\t\t                                                 \n"
"\n"
"\t\t\tnewPanel.BLoadLayout('file://{resources}/layout/' + XmlName + '.xml', false, false );\n"
"\t\t\tnewPanel.RegisterForReadyEvents( true );\n"
"\t\t\t\n"
"\t\t\t                                                                          \n"
"\t\t\t                                                       \n"
"\t\t\tnewPanel.OnPropertyTransitionEndEvent = function ( panelName, propertyName )\n"
"\t\t\t{\n"
"\t\t\t\tif( newPanel.id === panelName && propertyName === 'opacity' )\n"
"\t\t\t\t{\n"
"\t\t\t\t\t                                         \n"
"\t\t\t\t\tif( newPanel.visible === true && newPanel.BIsTransparent() )\n"
"\t\t\t\t\t{\n"
"\t\t\t\t\t\t                                               \n"
"\t\t\t\t\t\tnewPanel.visible = false;\n"
"\t\t\t\t\t\tnewPanel.SetReadyForDisplay( false );\n"
"\t\t\t\t\t\treturn true;\n"
"\t\t\t\t\t}\n"
"\t\t\t\t\telse if ( newPanel.visible === true )\n"
"\t\t\t\t\t{\n"
"\t\t\t\t\t\t$.DispatchEvent( 'MainMenuTabShown', tab );\n"
"\t\t\t\t\t}\n"
"\t\t\t\t}\n"
"\n"
"\t\t\t\treturn false;\n"
"\t\t\t};\n"
"\n"
"\t\t\t$.RegisterEventHandler( 'PropertyTransitionEnd', newPanel, newPanel.OnPropertyTransitionEndEvent );\n"
"\t\t}\n"
"\t\t\n"
"\t\t                                                                               \n"
"\t\t                             \n"
"\t\tif( _m_activeTab !== tab )\n"
"\t\t{\n"
"\t\t\t                                       \n"
"\t\t\tif(XmlName) {\n"
"\t\t\t\t$.DispatchEvent('PlaySoundEffect', 'tab_' + XmlName.replace('/', '_'), 'MOUSE');\n"
"\t\t\t}\n"
"\t\t\t\n"
"\t\t\t                                 \n"
"\t\t\tif( _m_activeTab )\n"
"\t\t\t{\n"
"\t\t\t\tvar panelToHide = $.GetContextPanel().FindChildInLayoutFile( _m_activeTab );\n"
"\t\t\t\tpanelToHide.AddClass( 'mainmenu-content--hidden' );\n"
"\n"
"\t\t\t\t                                       \n"
"\t\t\t}\n"
"\t\t\t\n"
"\t\t\t                   \n"
"\t\t\t_m_activeTab = tab;\n"
"\t\t\tvar activePanel = $.GetContextPanel().FindChildInLayoutFile( tab );\n"
"\t\t\tactivePanel.RemoveClass( 'mainmenu-content--hidden' );\n"
"\n"
"\t\t\t                                                                         \n"
"\t\t\tactivePanel.visible = true;\n"
"\t\t\tactivePanel.SetReadyForDisplay( true );\n"
"\t\t\t                                      \n"
"\n"
"\n"
"\t\t\t                                           \t\n"
"\t\t\t_PauseMainMenuCharacter();\n"
"\t\t}\n"
"\n"
"\t\t_ShowContentPanel();\n"
"\t};\n"
"\n"
"\n"
"\tvar _ShowContentPanel = function()\n"
"\t{\n"
"\t\tif ( _m_elContentPanel.BHasClass( 'mainmenu-content--offscreen' ) ) {\n"
"\t\t\t_m_elContentPanel.RemoveClass( 'mainmenu-content--offscreen' );\n"
"\t\t}\n"
"\n"
"\t\t$.DispatchEvent( 'ShowContentPanel' );\n"
"\t\t_DimMainMenuBackground( false );\n"
"\t\t_HideNewsAndStore();\n"
"\t};\n"
"\n"
"\tvar _OnHideContentPanel = function()\n"
"\t{\n"
"\t\t_m_elContentPanel.AddClass( 'mainmenu-content--offscreen' );\n"
"\n"
"\t\t                                                     \n"
"\t\tvar elActiveNavBarBtn = _GetActiveNavBarButton();\n"
"\t\tif ( elActiveNavBarBtn && elActiveNavBarBtn.id !== 'MainMenuNavBarHome' ) {\n"
"\t\t\telActiveNavBarBtn.checked = false;\n"
"\t\t}\n"
"\n"
"\t\t_DimMainMenuBackground( true );\n"
"\t\t\n"
"\t\t                                 \n"
"\t\tif ( _m_activeTab )\n"
"\t\t{\n"
"\t\t\tvar panelToHide = $.GetContextPanel().FindChildInLayoutFile( _m_activeTab );\n"
"\t\t\tpanelToHide.AddClass( 'mainmenu-content--hidden' );\n"
"\t\t\t                                        \n"
"\t\t}\n"
"\t\t\n"
"\t\t_m_activeTab = '';\n"
"\n"
"\t\t_ShowNewsAndStore();\n"
"\t};\n"
"\n"
"\tvar _GetActiveNavBarButton = function( )\n"
"\t{\n"
"\t\tvar elNavBar = $( '#JsMainMenuNavBar' );\n"
"\t\tvar children = elNavBar.Children();\n"
"\t\tvar count = children.length;\n"
"\n"
"\t\tfor (var i = 0; i < count; i++) \n"
"\t\t{\n"
"\t\t\tif ( children[ i ].IsSelected() ) {\n"
"\t\t\t\treturn children[ i ];\n"
"\t\t\t}\n"
"\t\t}\n"
"\t};\n"
"\n"
"\n"
"\t                                                                                                    \n"
"\t                                              \n"
"\t                                                                                                    \n"
"\tvar _ShowHideNavDrawer = function()\n"
"\t{\n"
"\t\tUiToolkitAPI.ShowCustomLayoutPopup('', 'file://{resources}/layout/popups/popup_navdrawer.xml');\n"
"\t};\n"
"\n"
"\t                              \n"
"\tvar _ExpandSidebar = function( )\n"
"\t{\n"
"\t\tvar elSidebar = $( '#JsMainMenuSidebar' );\n"
"\n"
"\t\tif(elSidebar.BHasClass( 'mainmenu-sidebar--minimized' ) ) {\n"
"\t\t\t$.DispatchEvent( 'PlaySoundEffect', 'sidemenu_slidein', 'MOUSE' );\n"
"\t\t}\n"
"\n"
"\t\telSidebar.RemoveClass( 'mainmenu-sidebar--minimized' );\n"
"\n"
"\t\t$.DispatchEvent( 'SidebarIsCollapsed', false );\n"
"\t\t_DimMainMenuBackground( false );\n"
"\t};\n"
"\n"
"\tvar _MinimizeSidebar = function()\n"
"\t{\n"
"\t\t                                                                                                 \n"
"\t\t                                                                                               \n"
"\t\t                           \n"
"\t\tif ( _m_elContentPanel == null ) {\n"
"\t\t\treturn;\n"
"\t\t}\n"
"\n"
"\t\t                                                                  \n"
"\t\t                                    \n"
"\t\tif ( _m_sideBarElementContextMenuActive ) {\n"
"\t\t\treturn;\n"
"\t\t}\n"
"\t\t\n"
"\t\tvar elSidebar = $( '#JsMainMenuSidebar' );\n"
"\n"
"\t\tif(!elSidebar.BHasClass( 'mainmenu-sidebar--minimized' ) ) {\n"
"\t\t\t$.DispatchEvent( 'PlaySoundEffect', 'sidemenu_slideout', 'MOUSE' );\n"
"\t\t}\n"
"\n"
"\t\telSidebar.AddClass( 'mainmenu-sidebar--minimized' );\n"
"\n"
"\t\t                                                            \n"
"\t\t                                                                    \n"
"\t\t\n"
"\t\t$.DispatchEvent( 'SidebarIsCollapsed', true );\n"
"\t\t_DimMainMenuBackground( true );\n"
"\t};\n"
"\n"
"\tvar _OnSideBarElementContextMenuActive = function( bActive )\n"
"\t{\n"
"\t\t                                               \n"
"\t\t_m_sideBarElementContextMenuActive = bActive;\n"
"\n"
"\t\t                                                                              \n"
"\t\t                                                                      \n"
"\t\t                                        \n"
"\t\tvar ContextMenuClosedOutsideSidebar = function ()\n"
"\t\t{ \n"
"\t\t\tvar isHover =  $( '#JsMainMenuSidebar' ).BHasHoverStyle();\n"
"\t\t\tif( !isHover ) {\n"
"\t\t\t\t_MinimizeSidebar();\n"
"\t\t\t}\n"
"\t\t};\n"
"\n"
"\t\t                                                                                       \n"
"\t\t$.Schedule( 0.25, ContextMenuClosedOutsideSidebar );\n"
"\n"
"\t\t_DimMainMenuBackground( false );\n"
"\t};\n"
"\n"
"\tvar _DimMainMenuBackground = function( removeDim )\n"
"\t{\t\t\n"
"\t\tif ( removeDim && _m_elContentPanel.BHasClass('mainmenu-content--offscreen') &&\n"
"\t\t\t$('#mainmenu-content__blur-target').BHasHoverStyle() === false) {\n"
"\t\t\t$('#MainMenuBackground').RemoveClass('Dim');\n"
"\t\t} else\n"
"\t\t\t$('#MainMenuBackground').AddClass('Dim');\n"
"\t};\n"
"\n"
"\t                                                                                                    \n"
"\t                         \n"
"\t                                                                                                    \n"
"\n"
"\tfunction _OnHomeButtonPressed()\n"
"\t{\n"
"\t\t$.DispatchEvent( 'HideContentPanel' );\n"
"\n"
"\t\t                                            \t\n"
"\t\tvar vanityPanel = $( '#JsMainmenu_Vanity' );\n"
"\t\tif ( vanityPanel )\n"
"\t\t{\n"
"\t\t\tvanityPanel.Pause( false );\n"
"\t\t}\n"
"\t}\n"
"\n"
"\tfunction _OnQuitButtonPressed()\n"
"\t{\t\n"
"\t\tUiToolkitAPI.ShowGenericPopupTwoOptionsBgStyle( '#UI_ConfirmExitTitle',\n"
"\t\t\t'#UI_ConfirmExitMessage',\n"
"\t\t\t'',\n"
"\t\t\t'#UI_Quit',\n"
"\t\t\tfunction() {\n"
"\t\t\t\tQuitGame( 'Option1' );\n"
"\t\t\t},\n"
"\t\t\t'#UI_Return',\n"
"\t\t\tfunction() {\n"
"\t\t\t},\n"
"\t\t\t'dim'\n"
"\t\t);\n"
"\t}\n"
"\n"
"\tfunction QuitGame( msg )\n"
"\t{\n"
"\t\t                                                 \n"
"\t\tGameInterfaceAPI.ConsoleCommand('quit');\n"
"\t}\n"
"\n"
"\t                                                                                                    \n"
"\t                      \n"
"\t                                                                                                    \n"
"\tvar _InitFriendsList = function( )\n"
"\t{\n"
"\t\tvar friendsList = $.CreatePanel( 'Panel', $.FindChildInContext( '#mainmenu-sidebar__blur-target' ), 'JsFriendsList' );\n"
"\t\tfriendsList.BLoadLayout( 'file://{resources}/layout/friendslist.xml', false, false );\n"
"\t};\n"
"\n"
"\tvar _InitNewsAndStore = function ()\n"
"\t{\t\n"
"\t\t/*_AddStream();\n"
"\t\t\n"
"\t\tvar elNews = $.CreatePanel( 'Panel', $.FindChildInContext( '#JsNewsContainer' ), 'JsNewsPanel' );\n"
"\t\telNews.BLoadLayout( 'file://{resources}/layout/mainmenu_news.xml', false, false );\n"
"\t\t\n"
"\t\tvar elStore = $.CreatePanel( 'Panel', $.FindChildInContext( '#JsNewsContainer' ), 'JsStorePanel' );\n"
"\t\telStore.BLoadLayout( 'file://{resources}/layout/mainmenu_store.xml', false, false );\n"
"\n"
"\t\t$.FindChildInContext( '#JsNewsContainer' ).OnPropertyTransitionEndEvent = function ( panelName, propertyName )\n"
"\t\t{\n"
"\t\t\tif( elNews.id === panelName && propertyName === 'opacity')\n"
"\t\t\t{\n"
"\t\t\t\t                                         \n"
"\t\t\t\tif( elNews.visible === true && elNews.BIsTransparent() )\n"
"\t\t\t\t{\n"
"\t\t\t\t\t                                               \n"
"\t\t\t\t\telNews.visible = false;\n"
"\t\t\t\t\telNews.SetReadyForDisplay( false );\n"
"\t\t\t\t\treturn true;\n"
"\t\t\t\t}\n"
"\t\t\t}\n"
"\n"
"\t\t\treturn false;\n"
"\t\t};\n"
"\n"
"\t\t_ShowNewsAndStore();*/\n"
"\t\t                      \n"
"\t};\n"
"\n"
"\tvar _AddStream = function()\n"
"\t{\n"
"\t\tvar elStream = $.CreatePanel( 'Panel', $.FindChildInContext( '#JsNewsContainer' ), 'JsStreamPanel' );\n"
"\t\telStream.BLoadLayout( 'file://{resources}/layout/mainmenu_stream.xml', false, false );\n"
"\t};\n"
"\n"
"\tvar _AddFeaturedPanel = function()\n"
"\t{\n"
"\t\t                  \n"
"\t\tvar featuredXML = 'file://{resources}/layout/mainmenu_featured.xml';\n"
"\n"
"\t\tvar elPanel = $.CreatePanel( 'Panel', $.FindChildInContext( '#JsNewsContainer' ), 'JsFeaturedPanel' );\n"
"\t\telPanel.BLoadLayout( featuredXML, false, false );\n"
"\n"
"\t\t$.FindChildInContext( '#JsNewsContainer' ).MoveChildBefore( elPanel, $.FindChildInContext( '#JsNewsPanel' ) );\n"
"\t\t$.FindChildInContext( '#JsNewsPanel' ).AddClass( 'news-panel-style-feature-panel-visible' );\n"
"\t};\n"
"\n"
"\tvar _ShowNewsAndStore = function ()\n"
"\t{\n"
"\t\tvar elNews = $.FindChildInContext( '#JsNewsContainer' );\n"
"\t\telNews.SetHasClass( 'hidden', false );\n"
"\t};\n"
"\n"
"\tvar _HideNewsAndStore = function ()\n"
"\t{\n"
"\t\tvar elNews = $.FindChildInContext( '#JsNewsContainer' );\n"
"\t\telNews.SetHasClass( 'hidden', true );\n"
"\t};\n"
"\n"
"\t                                                                                                    \n"
"\t                     \n"
"\t                                                                                                    \n"
"\n"
"\tvar _ForceRestartVanity = function()\n"
"\t{\n"
"\t\t_m_bVanityAnimationAlreadyStarted = false;\n"
"\t\t_InitVanity();\n"
"\t};\n"
"\t\n"
"\tvar _InitVanity = function()\n"
"\t{\n"
"\t\t                               \n"
"\t\tif ( !MyPersonaAPI.IsInventoryValid() ) {\n"
"\t\t\t                                                \n"
"\t\t\treturn;\n"
"\t\t}\n"
"\t\tif ( _m_bVanityAnimationAlreadyStarted ) {\n"
"\t\t\t                                                                         \n"
"\t\t\treturn;\n"
"\t\t}\n"
"\n"
"\t\tvar loadout = {\n"
"\t\t\titemId: GameInterfaceAPI.GetSettingString( 'ui_vanitysetting_itemid' ),\n"
"\t\t\tmodel: '',\n"
"\t\t\tteam: '',\n"
"\t\t\tloadoutSlot: ''\n"
"\t\t};\n"
"\n"
"\t\tvar i = 0;\n"
"\t\tfor ( i = 0; i < 2; ++ i )\n"
"\t\t{\t                                                                 \n"
"\t\t\tif ( !loadout.itemId )\n"
"\t\t\t{\t                                                    \n"
"\t\t\t\tloadout = _DefaultModelLoadouts();\n"
"\t\t\t\tloadout.itemId = LoadoutAPI.GetItemID( loadout.team, loadout.loadoutSlot );\n"
"\t\t\t\t                                          \n"
"\t\t\t\tGameInterfaceAPI.SetSettingString( 'ui_vanitysetting_itemid', loadout.itemId );\n"
"\t\t\t\tGameInterfaceAPI.SetSettingString( 'ui_vanitysetting_model', loadout.model );\n"
"\t\t\t\tGameInterfaceAPI.SetSettingString( 'ui_vanitysetting_team', loadout.team );\n"
"\t\t\t\tGameInterfaceAPI.SetSettingString( 'ui_vanitysetting_loadoutslot', loadout.loadoutSlot );\n"
"\t\t\t\t                                                                                                                      \n"
"\t\t\t}\n"
"\t\t\telse\n"
"\t\t\t{\t                             \n"
"\t\t\t\tloadout.model = GameInterfaceAPI.GetSettingString( 'ui_vanitysetting_model' );\n"
"\t\t\t\tloadout.team = GameInterfaceAPI.GetSettingString( 'ui_vanitysetting_team' );\n"
"\t\t\t\tloadout.loadoutSlot = GameInterfaceAPI.GetSettingString( 'ui_vanitysetting_loadoutslot' );\n"
"\n"
"\t\t\t\t                                            \n"
"\t\t\t\t                                         \n"
"\t\t\t\tvar arrModels = CharacterAnims.GetValidCharacterModels();\n"
"\t\t\t\tif ( arrModels.filter( function( entry )\n"
"\t\t\t\t\t{\n"
"\t\t\t\t\t\treturn entry.model === loadout.model && ( entry.team === loadout.team || entry.team === 'any' );\n"
"\t\t\t\t\t} ).length <= 0 )\n"
"\t\t\t\t{\n"
"\t\t\t\t\t                                                                                                                 \n"
"\t\t\t\t\tloadout.itemId = null;\n"
"\t\t\t\t\tcontinue;\n"
"\t\t\t\t}\n"
"\t\t\t\tif ( !InventoryAPI.IsValidItemID( loadout.itemId ) || !InventoryAPI.IsItemInfoValid( loadout.itemId ) )\n"
"\t\t\t\t{\n"
"\t\t\t\t\tloadout.itemId = LoadoutAPI.GetItemID( loadout.team, loadout.loadoutSlot );\n"
"\t\t\t\t\t                                                                                                                    \n"
"\t\t\t\t}\n"
"\t\t\t\telse\n"
"\t\t\t\t{\n"
"\t\t\t\t\t                                                        \n"
"\t\t\t\t\tif ( !loadout.loadoutSlot || ( ItemInfo.GetSlotSubPosition( loadout.itemId ) !== loadout.loadoutSlot ) )\n"
"\t\t\t\t\t{\n"
"\t\t\t\t\t\t                                                                                                                   \n"
"\t\t\t\t\t\tloadout.itemId = null;\n"
"\t\t\t\t\t\tcontinue;\n"
"\t\t\t\t\t}\n"
"\t\t\t\t\t\n"
"\t\t\t\t\t                                            \n"
"\t\t\t\t\tif ( !( ItemInfo.IsItemAnyTeam( loadout.itemId ) ||\n"
"\t\t\t\t\t\t(ItemInfo.IsItemCt( loadout.itemId ) && loadout.team === 'ct') ||\n"
"\t\t\t\t\t\t(ItemInfo.IsItemT( loadout.itemId ) && loadout.team === 't') ) )\n"
"\t\t\t\t\t{\n"
"\t\t\t\t\t\t                                                                                                            \n"
"\t\t\t\t\t\tloadout.itemId = null;\n"
"\t\t\t\t\t\tcontinue;\n"
"\t\t\t\t\t}\n"
"\n"
"\t\t\t\t\t                                                                                                                        \n"
"\t\t\t\t}\n"
"\t\t\t}\n"
"\t\t\tif ( InventoryAPI.IsValidItemID( loadout.itemId ) && InventoryAPI.IsItemInfoValid( loadout.itemId ) )\n"
"\t\t\t{\n"
"\t\t\t\tbreak;\n"
"\t\t\t}\n"
"\t\t}\n"
"\t\tif ( !InventoryAPI.IsValidItemID( loadout.itemId ) || !InventoryAPI.IsItemInfoValid( loadout.itemId ) )\n"
"\t\t{\n"
"\t\t\t                                                              \n"
"\t\t\treturn;\n"
"\t\t}\n"
"\n"
"\t\tvar vanityPanel = $( '#JsMainmenu_Vanity' );\n"
"\t\tif ( !vanityPanel )\n"
"\t\t{\n"
"\t\t\t                                                                 \n"
"\t\t\treturn;\n"
"\t\t}\n"
"\n"
"\t\t  \n"
"\t\t                               \n"
"\t\t  \n"
"\t\t                                                        \n"
"\t\t_m_bVanityAnimationAlreadyStarted = true;\n"
"\t\tloadout.panel = vanityPanel;\n"
"\t\tloadout.selectedWeapon = ItemInfo.GetItemDefinitionName( loadout.itemId );\n"
"\t\tloadout.playIntroAnim = true;\n"
"\t\tCharacterAnims.PlayAnimsOnPanel( loadout );\n"
"\n"
"\t\t_SetVanityLightingBasedOnBackgroundMovie( vanityPanel );\n"
"\n"
"\t\tif ( loadout.panel.BHasClass( 'hidden' ) ) {\n"
"\t\t\tloadout.panel.RemoveClass( 'hidden' );\n"
"\t\t}\n"
"\t};\n"
"\n"
"\tvar _DefaultModelLoadouts = function()\n"
"\t{\n"
"\t\tvar loadoutsList = CharacterAnims.GetValidCharacterModels();\n"
"\t\tvar randomEntry = Math.floor( Math.random() * loadoutsList.length );\n"
"\t\t\n"
"\t\t                                                                 \n"
"\t\tvar result = Object.assign( {}, loadoutsList[ randomEntry ] );\n"
"\n"
"\t\t                                                                                                 \n"
"\t\tif ( result.team === 'any' )\n"
"\t\t\tresult.team = 't';\n"
"\n"
"\t\t  \n"
"\t\t                                                       \n"
"\t\t  \n"
"\t\tvar survivalRandomEntry = loadoutsList.length - 3 + Math.floor( Math.random()*3 );\n"
"\t\tresult.model = loadoutsList[ survivalRandomEntry ].model;\n"
"\n"
"\t\treturn result;\n"
"\t};\n"
"\n"
"\tvar _SetVanityLightingBasedOnBackgroundMovie = function( vanityPanel )\n"
"\t{\n"
"\t\tvar backgroundMap = $.GetContextPanel().FindChildInLayoutFile( 'MainMenuMovie' ).GetAttributeString( 'data-type', 'nuke' );\n"
"\n"
"\t\tif ( backgroundMap === 'cbble' )\n"
"\t\t{\n"
"\t\t\tvanityPanel.SetFlashlightAmount( 1.0 );\n"
"\t\t\tvanityPanel.SetFlashlightRotation( 0, 0, 0 );\n"
"\t\t\tvanityPanel.SetFlashlightPosition( 38.67, 40.11, 107.51 );\n"
"\t\t\t                                                           \n"
"\t\t\tvanityPanel.SetFlashlightColor( 0.81, 0.92, 1.00 );\n"
"\t\t\tvanityPanel.SetAmbientLightColor( 0.12, 0.21, 0.46 );\n"
"\n"
"\t\t\tvanityPanel.SetDirectionalLightModify( 0 );\n"
"\t\t\tvanityPanel.SetDirectionalLightColor( 0.13, 0.14, 0.13 );\n"
"\t\t\tvanityPanel.SetDirectionalLightDirection( -0.81, 0.41, 0.43 );\n"
"\t\t\t\n"
"\t\t\tvanityPanel.SetDirectionalLightModify( 1 );\n"
"\t\t\tvanityPanel.SetDirectionalLightColor( 0.82, 0.19, 0.08 );\n"
"\t\t\tvanityPanel.SetDirectionalLightDirection( 0.62, 0.74, -0.25 );\n"
"\t\t\tvanityPanel.SetDirectionalLightPulseFlicker( 0.25, 0.25, 0.25, 0.25 );\n"
"\n"
"\t\t\tvanityPanel.SetDirectionalLightModify( 2 );\n"
"\t\t\tvanityPanel.SetDirectionalLightColor( 0.72, 1.40, 1.68 );\n"
"\t\t\tvanityPanel.SetDirectionalLightDirection( 0.50, -0.69, -0.52 );\n"
"\n"
"\t\t\t                                                   \n"
"\t\t}\n"
"\t\telse if ( 'blacksite' )\n"
"\t\t{\n"
"\t\t\tvanityPanel.SetFlashlightAmount( 1 );\n"
"\t\t\tvanityPanel.SetFlashlightRotation( 0, 0, 0 );\n"
"\t\t\tvanityPanel.SetFlashlightPosition( 47.37, 172.91, 0.00 );\n"
"\t\t\t                                                            \n"
"\t\t\tvanityPanel.SetFlashlightColor( 4, 4, 4);\n"
"\t\t\tvanityPanel.SetAmbientLightColor( 0.16, 0.26, 0.30 );\n"
"\t\t\t\n"
"\t\t\tvanityPanel.SetDirectionalLightModify( 0 );\n"
"\t\t\tvanityPanel.SetDirectionalLightColor( 0.26, 0.35, 0.47 );\n"
"\t\t\tvanityPanel.SetDirectionalLightDirection( -0.50, 0.80, 0.00 );\n"
"\t\t\t\n"
"\t\t\tvanityPanel.SetDirectionalLightModify( 1 );\n"
"\t\t\tvanityPanel.SetDirectionalLightColor( 0.74, 1.01, 1.36 );\n"
"\t\t\tvanityPanel.SetDirectionalLightDirection( 0.47, -0.77, -0.42 );\n"
"\n"
"\t\t\tvanityPanel.SetDirectionalLightModify( 2 );\n"
"\t\t\tvanityPanel.SetDirectionalLightColor( 0.75, 1.20, 1.94 );\n"
"\t\t\tvanityPanel.SetDirectionalLightDirection( 0.76, 0.48, -0.44 );\n"
"\t\t}\n"
"\t};\n"
"\n"
"\t                                                                           \n"
"\tvar _OnEquipSlotChanged = function( slot, oldItemID, newItemID )\n"
"\t{\n"
"\t};\n"
"\n"
"\tvar _OpenPlayMenu = function ()\n"
"\t{\n"
"\t\t                                                      \n"
"\t\tif ( MatchStatsAPI.GetUiExperienceType() )\n"
"\t\t\treturn;\n"
"\n"
"\t\t_InsureSessionCreated();\n"
"\t\t_NavigateToTab( 'JsPlay', 'mainmenu_play' );\n"
"\n"
"\t\t                                           \t\n"
"\t\t_PauseMainMenuCharacter();\t\t\n"
"\t};\n"
"\n"
"\tvar _OpenWatchMenu = function()\n"
"\t{\n"
"\t\t_PauseMainMenuCharacter();\n"
"\t\t_NavigateToTab( 'JsWatch', 'mainmenu_watch' );\n"
"\t}\n"
"\n"
"\tvar _OpenInventory = function ()\n"
"\t{\n"
"\t\t                                           \t\n"
"\t\t_PauseMainMenuCharacter();\n"
"\n"
"\t\t_NavigateToTab( 'JsInventory', 'mainmenu_inventory' );\n"
"\n"
"\t};\n"
"\n"
"\tvar _InsureSessionCreated = function()\n"
"\t{\n"
"\t\tif ( !LobbyAPI.IsSessionActive() )\n"
"\t\t{\n"
"\t\t\tLobbyAPI.CreateSession();\n"
"\t\t}\n"
"\t};\n"
"\n"
"\tvar _OnEscapeKeyPressed = function( eSource, nRepeats, focusPanel )\n"
"\t{\n"
"\t\t                                \n"
"\t\tif ( $.GetContextPanel().BHasClass( 'MainMenuRootPanel--PauseMenuMode' ) ) {\n"
"\t\t\t$.DispatchEvent( 'CSGOMainMenuResumeGame' );\n"
"\t\t}\n"
"\t\telse {\n"
"\t\t\tMainMenu.OnHomeButtonPressed();\n"
"\n"
"\t\t\tvar elPlayButton = $( '#MainMenuNavBarPlay' );\n"
"\t\t\tif( elPlayButton && !elPlayButton.BHasClass( 'mainmenu-navbar__btn-small--hidden' ) ) {\n"
"\t\t\t\t$.DispatchEvent('PlayMainMenuMusic', true, true );\n"
"\t\t\t}\n"
"\t\t}\n"
"\t};\n"
"\n"
"\t                                                                                                    \n"
"\t                    \n"
"\t                                                                                                    \n"
"\tvar _InventoryUpdated = function()\n"
"\t{\n"
"\t\t//_InitVanity();\n"
"\t\t_UpdateInventoryBtnAlert();\n"
"\t};\n"
"\n"
"\tvar _UpdateInventoryBtnAlert = function()\n"
"\t{\n"
"\t\tvar count = AcknowledgeItems.GetItems().length;\n"
"\t\tvar elNavBar = $.GetContextPanel().FindChildInLayoutFile('JsMainMenuNavBar'),\n"
"\t\telAlert = elNavBar.FindChildInLayoutFile('MainMenuInvAlert');\n"
"\n"
"\t\telAlert.FindChildInLayoutFile('MainMenuInvAlertText').text = count;\n"
"\t\telAlert.SetHasClass( 'hidden', count < 1 );\n"
"\t};\n"
"\n"
"\tvar JsInspectCallback = -1;\n"
"\n"
"\tvar _OnInventoryInspect = function( id )\n"
"\t{\n"
"\t\tUiToolkitAPI.ShowCustomLayoutPopupParameters(\n"
"\t\t\t'',\n"
"\t\t\t'file://{resources}/layout/popups/popup_inventory_inspect.xml',\n"
"\t\t\t'itemid=' + id +\n"
"\t\t\t'&' + 'inspectonly=true',\n"
"\t\t\t'none'\n"
"\t\t);\n"
"\t};\n"
"\n"
"\tvar JsInspectCallback = -1;\n"
"\tvar _OnLootlistItemPreview = function( id, params )\n"
"\t{\n"
"\t\tif ( JsInspectCallback != -1 )\n"
"\t\t{\n"
"\t\t\tUiToolkitAPI.UnregisterJSCallback( JsInspectCallback );\n"
"\t\t\tJsInspectCallback = -1;\n"
"\t\t}\n"
"\n"
"\t\tvar ParamsList = params.split( ',' );\n"
"\t\tvar keyId = ParamsList[ 0 ];\n"
"\t\tvar caseId = ParamsList[ 1 ];\n"
"\t\tvar storeId = ParamsList[ 2 ];\n"
"\t\tvar showMarketLinkDefault = _m_bPerfectWorld ? 'false' : 'true';\n"
"\n"
"\t\tJsInspectCallback = UiToolkitAPI.RegisterJSCallback( _OpenDecodeAfterInspect.bind( undefined, keyId, caseId, storeId ) );\n"
"\n"
"\t\tUiToolkitAPI.ShowCustomLayoutPopupParameters(\n"
"\t\t\t'',\n"
"\t\t\t'file://{resources}/layout/popups/popup_inventory_inspect.xml',\n"
"\t\t\t'itemid=' + id +\n"
"\t\t\t'&' + 'inspectonly=true' +\n"
"\t\t\t'&' + 'allowsave=false' +\n"
"\t\t\t'&' + 'showequip=false' +\n"
"\t\t\t'&' + 'showitemcert=false' +\n"
"\t\t\t'&' + 'showmarketlink='+ showMarketLinkDefault +\n"
"\t\t\t'&' + 'callback=' + JsInspectCallback,\n"
"\t\t\t'none'\n"
"\t\t);\n"
"\t};\n"
"\n"
"\tvar _OpenDecodeAfterInspect = function( keyId, caseId, storeId )\n"
"\t{\n"
"\t\t                                                                                                               \n"
"\t\t                                                                                    \n"
"\t\t                              \n"
"\t\tvar backtostoreiteminspectsettings = storeId ?\n"
"\t\t\t'&' + 'asyncworkitemwarning=no' +\n"
"\t\t\t'&' + 'asyncforcehide=true' +\n"
"\t\t\t'&' + 'storeitemid=' + storeId :\n"
"\t\t\t'';\n"
"\n"
"\t\tUiToolkitAPI.ShowCustomLayoutPopupParameters(\n"
"\t\t\t'',\n"
"\t\t\t'file://{resources}/layout/popups/popup_capability_decodable.xml',\n"
"\t\t\t'key-and-case=' + keyId + ',' + caseId +\n"
"\t\t\t'&' + 'asyncworktype=decodeable' +\n"
"\t\t\tbacktostoreiteminspectsettings\n"
"\t\t);\n"
"\t};\n"
"\n"
"\tvar _WeaponPreviewRequest = function( id )\n"
"\t{\n"
"\t\tUiToolkitAPI.CloseAllVisiblePopups();\n"
"\n"
"\t\tUiToolkitAPI.ShowCustomLayoutPopupParameters(\n"
"\t\t\t'',\n"
"\t\t\t'file://{resources}/layout/popups/popup_inventory_inspect.xml',\n"
"\t\t\t'itemid=' + id +\n"
"\t\t\t'&' + 'inspectonly=true' +\n"
"\t\t\t'&' + 'allowsave=false' +\n"
"\t\t\t'&' + 'showequip=false' +\n"
"\t\t\t'&' + 'showitemcert=true',\n"
"\t\t\t'none'\n"
"\t\t);\n"
"\t};\n"
"\n"
"\tvar _UpdateOverwatch = function()\n"
"\t{\n"
"\t\tvar strCaseDescription = OverwatchAPI.GetAssignedCaseDescription();\n"
"\t\t$( '#MainMenuNavBarOverwatch' ).SetHasClass( 'mainmenu-navbar__btn-small--hidden', strCaseDescription == \"\" );\n"
"\t};\n"
"\n"
"\tfunction _CancelNotificationSchedule()\n"
"\t{\n"
"\t\tif ( _m_notificationSchedule !== false )\n"
"\t\t{\n"
"\t\t\t$.CancelScheduled( _m_notificationSchedule );\n"
"\t\t\t_m_notificationSchedule = false;\n"
"\t\t}\n"
"\t}\n"
"\n"
"\tfunction _AcknowledgePenaltyNotificationsCallback()\n"
"\t{\n"
"\t\tCompetitiveMatchAPI.ActionAcknowledgePenalty();\n"
"\n"
"\t\t_m_bHasPopupNotification = false;\n"
"\t}\n"
"\n"
"\tfunction _AcknowledgeMsgNotificationsCallback()\n"
"\t{\n"
"\t\tMyPersonaAPI.ActionAcknowledgeNotifications();\n"
"\n"
"\t\t_m_bHasPopupNotification = false;\n"
"\t}\n"
"\n"
"\tfunction _GetPopupNotification()\n"
"\t{\n"
"\t\tvar popupNotification = {\n"
"\t\t\ttitle: \"\",\n"
"\t\t\tmsg: \"\",\n"
"\t\t\tcolor_class: \"NotificationYellow\",\n"
"\t\t\tcallback: function() {}\n"
"\t\t};\n"
"\t\t\n"
"\t\tvar nBanRemaining = CompetitiveMatchAPI.GetCooldownSecondsRemaining();\n"
"\t\tif ( nBanRemaining < 0 )\n"
"\t\t{\n"
"\t\t\tpopupNotification.title = \"#SFUI_MainMenu_Competitive_Ban_Confirm_Title\";\n"
"\t\t\tpopupNotification.msg = $.Localize( \"#SFUI_CooldownExplanationReason_Expired_Cooldown\" ) + $.Localize( CompetitiveMatchAPI.GetCooldownReason() );\n"
"\t\t\tpopupNotification.callback = _AcknowledgePenaltyNotificationsCallback;\n"
"\n"
"\t\t\treturn popupNotification;\n"
"\t\t}\n"
"\n"
"\t\tvar strNotifications = MyPersonaAPI.GetMyNotifications();\n"
"\t\tif ( strNotifications !== \"\" )\n"
"\t\t{\n"
"\t\t\tvar arrayOfNotifications = strNotifications.split( ',' );\n"
"\t\t\tarrayOfNotifications.forEach( function( notificationType )\n"
"\t\t\t{\n"
"\t\t\t\tif ( notificationType != 6 )\n"
"\t\t\t\t{\n"
"\t\t\t\t\tpopupNotification.color_class = 'NotificationBlue';\n"
"\t\t\t\t}\n"
"\t\t\t\tpopupNotification.title = '#SFUI_PersonaNotification_Title_' + notificationType;\n"
"\t\t\t\tpopupNotification.msg = '#SFUI_PersonaNotification_Msg_' + notificationType;\n"
"\t\t\t\tpopupNotification.callback = _AcknowledgeMsgNotificationsCallback;\n"
"\n"
"\t\t\t\treturn true;\n"
"\t\t\t} );\n"
"\n"
"\t\t\treturn popupNotification;\n"
"\t\t}\n"
"\n"
"\t\treturn null;\n"
"\t}\n"
"\n"
"\tfunction _UpdatePopupnotification()\n"
"\t{\n"
"\t\t                                                                       \n"
"\t\tif ( !_m_bHasPopupNotification )\n"
"\t\t{\n"
"\t\t\tvar popupNotification = _GetPopupNotification();\n"
"\t\t\tif ( popupNotification != null )\n"
"\t\t\t{\n"
"\t\t\t\tUiToolkitAPI.ShowGenericPopupOneOption(\n"
"\t\t\t\t\tpopupNotification.title,\n"
"\t\t\t\t\tpopupNotification.msg,\n"
"\t\t\t\t\tpopupNotification.color_class,\n"
"\t\t\t\t\t'#SFUI_MainMenu_ConfirmBan',\n"
"\t\t\t\t\tpopupNotification.callback\n"
"\t\t\t\t);\n"
"\t\t\n"
"\t\t\t\t_m_bHasPopupNotification = true;\n"
"\t\t\t}\n"
"\t\t}\n"
"\t}\n"
"\n"
"\tfunction _GetNotificationBarData()\n"
"\t{\n"
"\t\tvar notification = { color_class: \"\", title: \"\", tooltip: \"\" };\n"
"\n"
"\t\tif ( LicenseUtil.GetCurrentLicenseRestrictions() === false )\n"
"\t\t{\n"
"\t\t\t  \n"
"\t\t\t                                                                                              \n"
"\t\t\t  \n"
"\t\t\tvar bIsConnectedToGC = MyPersonaAPI.IsConnectedToGC();\n"
"\t\t\t$( '#MainMenuInput' ).SetHasClass( 'GameClientConnectingToGC', !bIsConnectedToGC );\n"
"\t\t\tif ( bIsConnectedToGC )\n"
"\t\t\t{\t                                                                 \n"
"\t\t\t\t_m_tLastSeenDisconnectedFromGC = 0;\n"
"\t\t\t}\n"
"\t\t\telse if ( !_m_tLastSeenDisconnectedFromGC )\n"
"\t\t\t{\t                                                                          \n"
"\t\t\t\t_m_tLastSeenDisconnectedFromGC = + new Date();                                                          \n"
"\t\t\t}\n"
"\t\t\telse if ( Math.abs( ( + new Date() ) - _m_tLastSeenDisconnectedFromGC ) > 7000 )\n"
"\t\t\t{\t                                           \n"
"\t\t\t\tnotification.color_class = \"NotificationLoggingOn\";\n"
"\t\t\t\tnotification.title = $.Localize( \"#Store_Connecting_ToGc\" );\n"
"\t\t\t\tnotification.tooltip = $.Localize( \"#Store_Connecting_ToGc_Tooltip\" );\n"
"\t\t\t\treturn notification;\n"
"\t\t\t}\n"
"\t\t}\n"
"\n"
"\t\t  \n"
"\t\t                             \n"
"\t\t  \n"
"\t\tvar nIsVacBanned = MyPersonaAPI.IsVacBanned();\n"
"\t\tif ( nIsVacBanned != 0 )\n"
"\t\t{\n"
"\t\t\tnotification.color_class = \"NotificationRed\";\n"
"\n"
"\t\t\tif ( nIsVacBanned == 1 )\n"
"\t\t\t{\n"
"\t\t\t\tnotification.title = $.Localize( \"#SFUI_MainMenu_Vac_Title\" );\n"
"\t\t\t\tnotification.tooltip = $.Localize( \"#SFUI_MainMenu_Vac_Info\" );\n"
"\t\t\t}\n"
"\t\t\telse\n"
"\t\t\t{\n"
"\t\t\t\tnotification.title = $.Localize( \"#SFUI_MainMenu_GameBan_Title\" );\n"
"\t\t\t\tnotification.tooltip = $.Localize( \"#SFUI_MainMenu_GameBan_Info\" );\n"
"\t\t\t}\n"
"\t\t\t\n"
"\t\t\treturn notification;\n"
"\t\t}\n"
"\n"
"\t\t  \n"
"\t\t                                  \n"
"\t\t  \n"
"\t\tif ( NewsAPI.IsNewClientAvailable() )\n"
"\t\t{\n"
"\t\t\tnotification.color_class = \"NotificationYellow\";\n"
"\t\t\tnotification.title = $.Localize( \"#SFUI_MainMenu_Outofdate_Title\" );\n"
"\t\t\tnotification.tooltip = $.Localize( \"#SFUI_MainMenu_Outofdate_Body\" );\n"
"\n"
"\t\t\treturn notification;\n"
"\t\t}\t\n"
"\t\t\n"
"\t\t  \n"
"\t\t                             \n"
"\t\t  \n"
"\t\tvar nBanRemaining = CompetitiveMatchAPI.GetCooldownSecondsRemaining();\n"
"\t\tif ( nBanRemaining > 0 )\n"
"\t\t{\n"
"\t\t\tnotification.tooltip = CompetitiveMatchAPI.GetCooldownReason();\n"
"\n"
"\t\t\tvar strType = CompetitiveMatchAPI.GetCooldownType();\n"
"\t\t\tif ( strType == \"global\" )\n"
"\t\t\t{\n"
"\t\t\t\tnotification.title = $.Localize( \"#SFUI_MainMenu_Global_Ban_Title\" );\n"
"\t\t\t\tnotification.color_class = \"NotificationRed\";\n"
"\t\t\t}\n"
"\t\t\telse if ( strType == \"green\" )\n"
"\t\t\t{\n"
"\t\t\t\tnotification.title = $.Localize( \"#SFUI_MainMenu_Temporary_Ban_Title\" );\n"
"\t\t\t\tnotification.color_class = \"NotificationGreen\";\n"
"\t\t\t}\n"
"\t\t\telse if ( strType == \"competitive\" )\n"
"\t\t\t{\n"
"\t\t\t\tnotification.title = $.Localize( \"#SFUI_MainMenu_Competitive_Ban_Title\" );\n"
"\t\t\t\tnotification.color_class = \"NotificationYellow\";\n"
"\t\t\t}\n"
"\t\t\t\n"
"\t\t\t                                                                                                                \n"
"\t\t\tif ( nBanRemaining <= 49*24*3600 )\n"
"\t\t\t{\n"
"\t\t\t\tnotification.title = notification.title + ' ' + FormatText.SecondsToSignificantTimeString( nBanRemaining );\n"
"\t\t\t}\n"
"\n"
"\t\t\treturn notification;\n"
"\t\t}\t\n"
"\n"
"\t\treturn null;\n"
"\t}\n"
"\n"
"\tfunction _UpdateNotificationBar()\n"
"\t{\n"
"\t\tvar notification = _GetNotificationBarData();\n"
"\n"
"\t\t                   \n"
"\t\t_m_NotificationBarColorClasses.forEach( function ( strColorClass )\n"
"\t\t{\n"
"\t\t\tvar bVisibleColor = false;\n"
"\t\t\tif ( notification !== null )\n"
"\t\t\t{\n"
"\t\t\t\tbVisibleColor = strColorClass === notification.color_class;\n"
"\t\t\t}\n"
"\t\t\t_m_elNotificationsContainer.SetHasClass( strColorClass, bVisibleColor );\n"
"\t\t} );\n"
"\n"
"\t\t                         \n"
"\t\tif ( notification !== null )\n"
"\t\t{\n"
"\t\t\t$.FindChildInContext( '#MainMenuNotificationTitle' ).text = notification.title;\n"
"\t\t}\n"
"\n"
"\t\t_m_elNotificationsContainer.SetHasClass( 'hidden', notification === null );\n"
"\t}\n"
"\n"
"\tvar _UpdateNotifications = function()\n"
"\t{\n"
"\t\t_m_notificationSchedule = $.Schedule( 1.0, _UpdateNotifications );\n"
"\n"
"\t\t_UpdatePopupnotification();\n"
"\n"
"\t\t_UpdateNotificationBar();\n"
"\t};\n"
"\n"
"\n"
"\t                                                                                                    \n"
"\t                    \n"
"\t                                                                                                    \n"
"\tvar _m_acknowledgePopupHandler = null;\n"
"\tvar _ShowAcknowledgePopup = function( type, itemid )\n"
"\t{\n"
"\t\tvar updatedItemTypeAndItemid = '';\n"
"\t\tif ( itemid && type )\n"
"\t\t\tupdatedItemTypeAndItemid = 'ackitemid=' + itemid + '&acktype=' + type;\n"
"\t\t\t\n"
"\t\tif( !_m_acknowledgePopupHandler ) {\n"
"\t\t\tvar jsPopupCallbackHandle;\n"
"\t\t\tjsPopupCallbackHandle = UiToolkitAPI.RegisterJSCallback( MainMenu.ResetAcknowlegeHandler );\n"
"\n"
"\t\t\t_m_acknowledgePopupHandler = UiToolkitAPI.ShowCustomLayoutPopupParameters( \n"
"\t\t\t\t'',\n"
"\t\t\t\t'file://{resources}/layout/popups/popup_acknowledge_item.xml',\n"
"\t\t\t\tupdatedItemTypeAndItemid + '&callback=' + jsPopupCallbackHandle\n"
"\t\t\t);\n"
"\n"
"\t\t\t$.DispatchEvent( 'PlaySoundEffect', 'UIPanorama.inventory_new_item', 'MOUSE' );\n"
"\t\t}\n"
"\t};\n"
"\n"
"\tvar _ResetAcknowlegeHandler = function()\n"
"\t{\n"
"\t\t_m_acknowledgePopupHandler = null;\n"
"\t};\n"
"\n"
"\tvar _ShowNotificationBarTooltip = function ()\n"
"\t{\n"
"\t\tvar notification = _GetNotificationBarData();\n"
"\t\tif ( notification !== null )\n"
"\t\t{\n"
"\t\t\tUiToolkitAPI.ShowTextTooltip( 'NotificationsContainer', notification.tooltip );\n"
"\t\t}\n"
"\t};\n"
"\n"
"\tvar _ShowVote = function ()\n"
"\t{\n"
"\t\tvar contextMenuPanel = UiToolkitAPI.ShowCustomLayoutContextMenuParametersDismissEvent(\n"
"\t\t\t'MainMenuNavBarVote',\n"
"\t\t\t'',\n"
"\t\t\t'file://{resources}/layout/context_menus/context_menu_vote.xml',\n"
"\t\t\t'',\n"
"\t\t\tfunction()\n"
"\t\t\t{\n"
"\t\t\t\t                                    \n"
"\t\t\t}\n"
"\t\t);\n"
"\t\tcontextMenuPanel.AddClass( \"ContextMenu_NoArrow\" );\n"
"\t};\n"
"\n"
"\tvar _HideStoreStatusPanel = function () {\n"
"\t    if (_m_storePopupElement && _m_storePopupElement.IsValid()) {\n"
"\t        _m_storePopupElement.DeleteAsync(0);\n"
"\t    }\n"
"\n"
"\t    _m_storePopupElement = null;\n"
"\t};\n"
"\n"
"\tvar _ShowStoreStatusPanel = function (strText, bAllowClose, bCancel, strOkCmd)\n"
"\t{\n"
"\t    _HideStoreStatusPanel();\n"
"\n"
"\t    var paramclose = '0';\n"
"\t    if (bAllowClose) {\n"
"\t        paramclose = '1';\n"
"\t    }\n"
"\n"
"\t    var paramcancel = '0';\n"
"\t    if (bCancel) {\n"
"\t        paramcancel = '1';\n"
"\t    }\n"
"\n"
"\t    _m_storePopupElement = UiToolkitAPI.ShowCustomLayoutPopupParameters(\n"
"            'store_popup',\n"
"            'file://{resources}/layout/popups/popup_store_status.xml',\n"
"\t\t\t'text=' + $.UrlEncode( strText ) +\n"
"\t\t\t'&' + 'allowclose=' + paramclose +\n"
"\t\t\t'&' + 'cancel=' + paramcancel +\n"
"\t\t\t'&'+'okcmd=' + $.UrlEncode( strOkCmd ) );\n"
"\t};\n"
"\n"
"\tvar _ShowWeaponUpdatePopup = function()\n"
"\t{\n"
"\t\treturn;                                                         \n"
"\t\tvar setVersionTo = '1';\n"
"\t\tvar currentVersion = GameInterfaceAPI.GetSettingString( 'ui_popup_weaponupdate_version' );\n"
"\n"
"\t\tif ( currentVersion !== setVersionTo )\n"
"\t\t{\n"
"\t\t\t                      \n"
"\t\t\t$.Schedule( 1.75, showMp5Popup );\n"
"\n"
"\t\t\tfunction showMp5Popup ()\n"
"\t\t\t{\n"
"\t\t\t\tvar defIndex = 23;\n"
"\t\t\t\tUiToolkitAPI.ShowCustomLayoutPopupParameters(\n"
"\t\t\t\t\t'',\n"
"\t\t\t\t\t'file://{resources}/layout/popups/popup_weapon_update.xml',\n"
"\t\t\t\t\t'defindex=' + defIndex +\n"
"\t\t\t\t\t'&' + 'uisettingversion=' + setVersionTo,\n"
"\t\t\t\t\t'none'\n"
"\t\t\t\t);\n"
"\t\t\t}\n"
"\t\t}\n"
"\t};\n"
"\n"
"\tvar _PauseMainMenuCharacter = function()\n"
"\t{\n"
"\t\tvar vanityPanel = $( '#JsMainmenu_Vanity' );\n"
"\n"
"\t\tif ( vanityPanel && UiToolkitAPI.IsPanoramaInECOMode() )\n"
"\t\t{\n"
"\t\t\tvanityPanel.Pause( true );\n"
"\t\t}\n"
"\t}\n"
"\n"
"\tvar _ShowTournamentStore = function() \n"
"\t{\n"
"\t\tUiToolkitAPI.ShowCustomLayoutPopupParameters(\n"
"\t\t\t'',\n"
"\t\t\t'file://{resources}/layout/popups/popup_tournament_store.xml',\n"
"\t\t\t'',\n"
"\t\t\t'none'\n"
"\t\t);\n"
"\t}; \n"
"\t\n"
"\t                                                                                                    \n"
"\t                                                \n"
"\t                                                                                                    \n"
"\tvar _ResetSurvivalEndOfMatch = function()\n"
"\t{\n"
"\t\t_DeleteSurvivalEndOfMatch();\n"
"\n"
"\t\tfunction CreateEndOfMatchPanel ()\n"
"\t\t{\n"
"\t\t\tvar elPanel = $.CreatePanel(\n"
"\t\t\t\t'CSGOSurvivalEndOfMatch',\n"
"\t\t\t\t$( '#MainMenuBackground' ),\n"
"\t\t\t\t'PauseMenuSurvivalEndOfMatch',\n"
"\t\t\t\t{\n"
"\t\t\t\t\tclass: 'PauseMenuModeOnly'\n"
"\t\t\t\t}\n"
"\t\t\t);\n"
"\n"
"\t\t\t\n"
"\t\t\telPanel.SetAttributeString( 'pausemenu', 'true' );\n"
"\t\t\t_UpdateSurvivalEndOfMatchInstance();\n"
"\t\t}\n"
"\n"
"\t\t$.Schedule( 0.1, CreateEndOfMatchPanel );\n"
"\t};\n"
"\n"
"\tvar _DeleteSurvivalEndOfMatch = function()\n"
"\t{\n"
"\t\tif ( $( '#PauseMenuSurvivalEndOfMatch' ) )\n"
"\t\t{\n"
"\t\t\t$( '#PauseMenuSurvivalEndOfMatch' ).DeleteAsync( 0.0 );\n"
"\t\t}\n"
"\t};\n"
"\n"
"\tfunction _UpdateSurvivalEndOfMatchInstance()\n"
"\t{\n"
"\t\tvar elSurvivalPanel = $( '#PauseMenuSurvivalEndOfMatch' );\n"
"\n"
"\t\tif ( elSurvivalPanel && elSurvivalPanel.IsValid() )\n"
"\t\t{\n"
"\t\t\t$( '#PauseMenuSurvivalEndOfMatch' ).matchStatus.UpdateFromPauseMenu();\n"
"\t\t}\n"
"\t}\n"
"\n"
"\treturn {\n"
"\t\tOnInitFadeUp\t\t\t\t\t\t: _OnInitFadeUp,\n"
"\t\tOnShowMainMenu\t\t\t\t\t\t: _OnShowMainMenu,\n"
"\t\tOnHideMainMenu\t \t\t\t\t\t: _OnHideMainMenu,\n"
"\t\tOnShowPauseMenu\t \t\t\t\t\t: _OnShowPauseMenu,\n"
"\t\tOnHidePauseMenu\t \t\t\t\t\t: _OnHidePauseMenu,\n"
"\t\tNavigateToTab\t \t\t\t\t\t: _NavigateToTab,\n"
"\t\tShowContentPanel\t \t\t\t\t: _ShowContentPanel,\n"
"\t\tOnHideContentPanel\t \t\t\t\t: _OnHideContentPanel,\n"
"\t\tGetActiveNavBarButton\t \t\t\t: _GetActiveNavBarButton,\n"
"\t\tShowHideNavDrawer\t \t\t\t\t: _ShowHideNavDrawer,\n"
"\t\tExpandSidebar\t \t\t\t\t\t: _ExpandSidebar,\n"
"\t\tMinimizeSidebar\t \t\t\t\t\t: _MinimizeSidebar,\n"
"\t\tOnSideBarElementContextMenuActive\t: _OnSideBarElementContextMenuActive,\n"
"\t\tInitFriendsList\t \t\t\t\t\t: _InitFriendsList,\n"
"\t\tInitNewsAndStore\t\t\t\t\t: _InitNewsAndStore,\n"
"\t\tInitVanity\t\t\t\t\t\t\t: _InitVanity,\n"
"\t\tForceRestartVanity\t \t\t\t\t: _ForceRestartVanity,\n"
"\t\tOnEquipSlotChanged\t \t\t\t\t: _OnEquipSlotChanged,\n"
"\t\tOpenPlayMenu\t\t\t\t\t\t: _OpenPlayMenu,\n"
"\t\tOpenWatchMenu\t\t\t\t\t\t: _OpenWatchMenu,\n"
"\t\tOpenInventory\t\t\t\t\t\t: _OpenInventory,\n"
"\t\tOnHomeButtonPressed\t\t\t\t\t: _OnHomeButtonPressed,\n"
"\t\tOnQuitButtonPressed\t\t\t\t\t: _OnQuitButtonPressed,\n"
"\t\tOnEscapeKeyPressed\t\t\t\t\t: _OnEscapeKeyPressed,\n"
"\t\tGcLogonNotificationReceived\t\t\t: _GcLogonNotificationReceived,\n"
"\t\tInventoryUpdated\t\t\t\t\t: _InventoryUpdated,\n"
"\t\tOnInventoryInspect\t\t\t\t\t: _OnInventoryInspect,\n"
"\t\tWeaponPreviewRequest\t\t\t\t: _WeaponPreviewRequest,\n"
"\t\tOnLootlistItemPreview\t\t\t\t: _OnLootlistItemPreview,\n"
"\t\tUpdateOverwatch\t\t\t\t\t\t: _UpdateOverwatch,\n"
"\t\tUpdateNotifications\t\t\t\t\t: _UpdateNotifications,\n"
"\t\tShowAcknowledgePopup\t\t\t\t: _ShowAcknowledgePopup,\n"
"\t\tResetAcknowlegeHandler\t\t\t\t: _ResetAcknowlegeHandler,\n"
"\t\tShowNotificationBarTooltip\t\t\t: _ShowNotificationBarTooltip,\n"
"\t\tShowVote \t\t\t\t\t\t\t: _ShowVote,\n"
"\t\tShowStoreStatusPanel\t\t\t\t: _ShowStoreStatusPanel,\n"
"\t\tHideStoreStatusPanel\t\t\t\t: _HideStoreStatusPanel,\n"
"\t\tPauseMainMenuCharacter\t\t\t\t: _PauseMainMenuCharacter,\n"
"\t\tShowTournamentStore\t\t\t\t\t: _ShowTournamentStore,\n"
"\t\tTournamentDraftUpdate\t\t\t\t: _TournamentDraftUpdate,\n"
"\t\tResetSurvivalEndOfMatch\t\t\t\t: _ResetSurvivalEndOfMatch\n"
"\t};\n"
"})();\n"
"\n"
"\n"
"                                                                                                    \n"
"                                           \n"
"                                                                                                    \n"
"(function()\n"
"{\n"
"\t$.RegisterForUnhandledEvent( 'HideContentPanel', MainMenu.OnHideContentPanel );\n"
"\t$.RegisterForUnhandledEvent( 'SidebarContextMenuActive', MainMenu.OnSideBarElementContextMenuActive );\n"
"\t//$.RegisterForUnhandledEvent( 'UpdateVanityModelData', MainMenu.ForceRestartVanity );\n"
"\t$.RegisterForUnhandledEvent( 'OpenPlayMenu', MainMenu.OpenPlayMenu );\n"
"\t$.RegisterForUnhandledEvent( 'OpenInventory', MainMenu.OpenInventory );\n"
"\t$.RegisterForUnhandledEvent( 'OpenWatchMenu', MainMenu.OpenWatchMenu );\n"
"\t$.RegisterForUnhandledEvent( 'CSGOShowMainMenu', MainMenu.OnShowMainMenu);\n"
"\t$.RegisterForUnhandledEvent( 'CSGOHideMainMenu', MainMenu.OnHideMainMenu);\n"
"\t$.RegisterForUnhandledEvent( 'CSGOShowPauseMenu', MainMenu.OnShowPauseMenu);\n"
"\t$.RegisterForUnhandledEvent( 'CSGOHidePauseMenu', MainMenu.OnHidePauseMenu);\n"
"\t$.RegisterForUnhandledEvent( 'OpenSidebarPanel', MainMenu.ExpandSidebar);\n"
"\t$.RegisterForUnhandledEvent( 'PanoramaComponent_MyPersona_GcLogonNotificationReceived', MainMenu.GcLogonNotificationReceived );\n"
"\t$.RegisterForUnhandledEvent( 'PanoramaComponent_MyPersona_InventoryUpdated', MainMenu.InventoryUpdated );\n"
"\t$.RegisterForUnhandledEvent( 'InventoryItemPreview', MainMenu.OnInventoryInspect );\n"
"\t$.RegisterForUnhandledEvent( 'LootlistItemPreview', MainMenu.OnLootlistItemPreview );\n"
"\t$.RegisterForUnhandledEvent( 'PanoramaComponent_Inventory_WeaponPreviewRequest', MainMenu.WeaponPreviewRequest );\n"
"\t$.RegisterForUnhandledEvent( 'PanoramaComponent_Overwatch_CaseUpdated', MainMenu.UpdateOverwatch );\n"
"\t$.RegisterForUnhandledEvent( \"PanoramaComponent_TournamentMatch_DraftUpdate\", MainMenu.TournamentDraftUpdate );\n"
"\n"
"\t$.RegisterForUnhandledEvent( 'ShowAcknowledgePopup', MainMenu.ShowAcknowledgePopup );\n"
"    $.RegisterForUnhandledEvent( 'ShowStoreStatusPanel', MainMenu.ShowStoreStatusPanel );\n"
"\t$.RegisterForUnhandledEvent( 'HideStoreStatusPanel', MainMenu.HideStoreStatusPanel );\n"
"\n"
"\t$.RegisterForUnhandledEvent( 'ShowVoteContextMenu', MainMenu.ShowVote );\n"
"\t$.RegisterForUnhandledEvent( 'ShowTournamentStore', MainMenu.ShowTournamentStore );\n"
"\n"
"\t$.RegisterForUnhandledEvent( 'OnMapConfigLoaded', MainMenu.ResetSurvivalEndOfMatch );\n"
"\t\n"
"\tMainMenu.MinimizeSidebar();\n"
"\t//MainMenu.InitVanity();\n"
"\tMainMenu.MinimizeSidebar();\n"
"\tMainMenu.InitFriendsList();\n"
"\t//MainMenu.InitNewsAndStore();\n"
"\n"
"\t                                                                                  \n"
"\t$.RegisterEventHandler( \"Cancelled\", $.GetContextPanel(), MainMenu.OnEscapeKeyPressed );\n"
"\n"
"})();\n"
"";

/* D:\mainmenu.xml (26.03.2019 15:28:41)
   StartOffset(h): 00000000, EndOffset(h): 00003833, Length(h): 00003834 */

unsigned char mainmenu_xml[14389] = {
	0x3C, 0x72, 0x6F, 0x6F, 0x74, 0x3E, 0x0D, 0x0A, 0x09, 0x3C, 0x73, 0x74,
	0x79, 0x6C, 0x65, 0x73, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x3C, 0x69, 0x6E,
	0x63, 0x6C, 0x75, 0x64, 0x65, 0x20, 0x73, 0x72, 0x63, 0x3D, 0x22, 0x66,
	0x69, 0x6C, 0x65, 0x3A, 0x2F, 0x2F, 0x7B, 0x72, 0x65, 0x73, 0x6F, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x7D, 0x2F, 0x73, 0x74, 0x79, 0x6C, 0x65, 0x73,
	0x2F, 0x63, 0x73, 0x67, 0x6F, 0x73, 0x74, 0x79, 0x6C, 0x65, 0x73, 0x2E,
	0x63, 0x73, 0x73, 0x22, 0x20, 0x2F, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x3C,
	0x69, 0x6E, 0x63, 0x6C, 0x75, 0x64, 0x65, 0x20, 0x73, 0x72, 0x63, 0x3D,
	0x22, 0x66, 0x69, 0x6C, 0x65, 0x3A, 0x2F, 0x2F, 0x7B, 0x72, 0x65, 0x73,
	0x6F, 0x75, 0x72, 0x63, 0x65, 0x73, 0x7D, 0x2F, 0x73, 0x74, 0x79, 0x6C,
	0x65, 0x73, 0x2F, 0x6D, 0x61, 0x69, 0x6E, 0x6D, 0x65, 0x6E, 0x75, 0x2E,
	0x63, 0x73, 0x73, 0x22, 0x20, 0x2F, 0x3E, 0x0D, 0x0A, 0x09, 0x3C, 0x2F,
	0x73, 0x74, 0x79, 0x6C, 0x65, 0x73, 0x3E, 0x09, 0x0D, 0x0A, 0x09, 0x3C,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x3E, 0x0D, 0x0A, 0x09, 0x09,
	0x3C, 0x69, 0x6E, 0x63, 0x6C, 0x75, 0x64, 0x65, 0x20, 0x73, 0x72, 0x63,
	0x3D, 0x22, 0x66, 0x69, 0x6C, 0x65, 0x3A, 0x2F, 0x2F, 0x7B, 0x72, 0x65,
	0x73, 0x6F, 0x75, 0x72, 0x63, 0x65, 0x73, 0x7D, 0x2F, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x73, 0x2F, 0x6D, 0x61, 0x69, 0x6E, 0x6D, 0x65, 0x6E,
	0x75, 0x2E, 0x6A, 0x73, 0x22, 0x20, 0x2F, 0x3E, 0x0D, 0x0A, 0x09, 0x09,
	0x3C, 0x69, 0x6E, 0x63, 0x6C, 0x75, 0x64, 0x65, 0x20, 0x73, 0x72, 0x63,
	0x3D, 0x22, 0x66, 0x69, 0x6C, 0x65, 0x3A, 0x2F, 0x2F, 0x7B, 0x72, 0x65,
	0x73, 0x6F, 0x75, 0x72, 0x63, 0x65, 0x73, 0x7D, 0x2F, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x73, 0x2F, 0x63, 0x6F, 0x6D, 0x6D, 0x6F, 0x6E, 0x2F,
	0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x61, 0x6E, 0x69,
	0x6D, 0x73, 0x2E, 0x6A, 0x73, 0x22, 0x20, 0x2F, 0x3E, 0x0D, 0x0A, 0x09,
	0x09, 0x3C, 0x69, 0x6E, 0x63, 0x6C, 0x75, 0x64, 0x65, 0x20, 0x73, 0x72,
	0x63, 0x3D, 0x22, 0x66, 0x69, 0x6C, 0x65, 0x3A, 0x2F, 0x2F, 0x7B, 0x72,
	0x65, 0x73, 0x6F, 0x75, 0x72, 0x63, 0x65, 0x73, 0x7D, 0x2F, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x73, 0x2F, 0x63, 0x6F, 0x6D, 0x6D, 0x6F, 0x6E,
	0x2F, 0x69, 0x74, 0x65, 0x6D, 0x69, 0x6E, 0x66, 0x6F, 0x2E, 0x6A, 0x73,
	0x22, 0x20, 0x2F, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x3C, 0x69, 0x6E, 0x63,
	0x6C, 0x75, 0x64, 0x65, 0x20, 0x73, 0x72, 0x63, 0x3D, 0x22, 0x66, 0x69,
	0x6C, 0x65, 0x3A, 0x2F, 0x2F, 0x7B, 0x72, 0x65, 0x73, 0x6F, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x7D, 0x2F, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73,
	0x2F, 0x63, 0x6F, 0x6D, 0x6D, 0x6F, 0x6E, 0x2F, 0x6C, 0x69, 0x63, 0x65,
	0x6E, 0x73, 0x65, 0x75, 0x74, 0x69, 0x6C, 0x2E, 0x6A, 0x73, 0x22, 0x20,
	0x2F, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x3C, 0x69, 0x6E, 0x63, 0x6C, 0x75,
	0x64, 0x65, 0x20, 0x73, 0x72, 0x63, 0x3D, 0x22, 0x66, 0x69, 0x6C, 0x65,
	0x3A, 0x2F, 0x2F, 0x7B, 0x72, 0x65, 0x73, 0x6F, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x7D, 0x2F, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x2F, 0x70,
	0x6F, 0x70, 0x75, 0x70, 0x73, 0x2F, 0x70, 0x6F, 0x70, 0x75, 0x70, 0x5F,
	0x61, 0x63, 0x6B, 0x6E, 0x6F, 0x77, 0x6C, 0x65, 0x64, 0x67, 0x65, 0x5F,
	0x69, 0x74, 0x65, 0x6D, 0x2E, 0x6A, 0x73, 0x22, 0x20, 0x2F, 0x3E, 0x0D,
	0x0A, 0x09, 0x3C, 0x2F, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x3E,
	0x0D, 0x0A, 0x0D, 0x0A, 0x09, 0x3C, 0x73, 0x6E, 0x69, 0x70, 0x70, 0x65,
	0x74, 0x73, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x3C, 0x73, 0x6E, 0x69, 0x70,
	0x70, 0x65, 0x74, 0x20, 0x6E, 0x61, 0x6D, 0x65, 0x3D, 0x22, 0x4D, 0x61,
	0x69, 0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x4D, 0x6F, 0x76, 0x69, 0x65, 0x53,
	0x6E, 0x69, 0x70, 0x70, 0x65, 0x74, 0x22, 0x3E, 0x0D, 0x0A, 0x09, 0x09,
	0x09, 0x3C, 0x50, 0x61, 0x6E, 0x65, 0x6C, 0x3E, 0x0D, 0x0A, 0x09, 0x09,
	0x09, 0x09, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0D,
	0x0A, 0x09, 0x09, 0x09, 0x09, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0D, 0x0A, 0x09, 0x09, 0x09,
	0x09, 0x3C, 0x4D, 0x6F, 0x76, 0x69, 0x65, 0x20, 0x63, 0x6C, 0x61, 0x73,
	0x73, 0x3D, 0x22, 0x6D, 0x61, 0x69, 0x6E, 0x6D, 0x65, 0x6E, 0x75, 0x2D,
	0x6D, 0x6F, 0x76, 0x69, 0x65, 0x20, 0x4D, 0x61, 0x69, 0x6E, 0x4D, 0x65,
	0x6E, 0x75, 0x4D, 0x6F, 0x64, 0x65, 0x4F, 0x6E, 0x6C, 0x79, 0x22, 0x20,
	0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x69, 0x64, 0x3D, 0x22, 0x4D,
	0x61, 0x69, 0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x4D, 0x6F, 0x76, 0x69, 0x65,
	0x22, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x73, 0x72, 0x63, 0x3D,
	0x22, 0x22, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x73, 0x6F, 0x75,
	0x6E, 0x64, 0x3D, 0x22, 0x22, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x63, 0x6F, 0x6E, 0x74, 0x72, 0x6F, 0x6C, 0x73, 0x3D, 0x22, 0x6E, 0x6F,
	0x6E, 0x65, 0x22, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x72, 0x65,
	0x70, 0x65, 0x61, 0x74, 0x3D, 0x22, 0x74, 0x72, 0x75, 0x65, 0x22, 0x0D,
	0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x68, 0x69, 0x74, 0x74, 0x65, 0x73,
	0x74, 0x3D, 0x22, 0x66, 0x61, 0x6C, 0x73, 0x65, 0x22, 0x3E, 0x0D, 0x0A,
	0x09, 0x09, 0x09, 0x09, 0x3C, 0x2F, 0x4D, 0x6F, 0x76, 0x69, 0x65, 0x3E,
	0x0D, 0x0A, 0x09, 0x09, 0x09, 0x3C, 0x2F, 0x50, 0x61, 0x6E, 0x65, 0x6C,
	0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x3C, 0x2F, 0x73, 0x6E, 0x69, 0x70, 0x70,
	0x65, 0x74, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x3C, 0x73, 0x6E, 0x69, 0x70,
	0x70, 0x65, 0x74, 0x20, 0x6E, 0x61, 0x6D, 0x65, 0x3D, 0x22, 0x4D, 0x61,
	0x69, 0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x56, 0x61, 0x6E, 0x69, 0x74, 0x79,
	0x53, 0x6E, 0x69, 0x70, 0x70, 0x65, 0x74, 0x22, 0x3E, 0x0D, 0x0A, 0x09,
	0x09, 0x09, 0x3C, 0x50, 0x61, 0x6E, 0x65, 0x6C, 0x3E, 0x0D, 0x0A, 0x09,
	0x09, 0x09, 0x09, 0x3C, 0x49, 0x74, 0x65, 0x6D, 0x50, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x50, 0x61, 0x6E, 0x65, 0x6C, 0x20, 0x69, 0x64, 0x3D,
	0x22, 0x4A, 0x73, 0x4D, 0x61, 0x69, 0x6E, 0x6D, 0x65, 0x6E, 0x75, 0x5F,
	0x56, 0x61, 0x6E, 0x69, 0x74, 0x79, 0x22, 0x0D, 0x0A, 0x09, 0x09, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x63, 0x6C, 0x61, 0x73, 0x73, 0x3D, 0x22,
	0x6D, 0x61, 0x69, 0x6E, 0x6D, 0x65, 0x6E, 0x75, 0x2D, 0x76, 0x61, 0x6E,
	0x69, 0x74, 0x79, 0x20, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6E, 0x20, 0x4D,
	0x61, 0x69, 0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x4D, 0x6F, 0x64, 0x65, 0x4F,
	0x6E, 0x6C, 0x79, 0x22, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x09, 0x6D, 0x61, 0x6E, 0x69, 0x66, 0x65, 0x73, 0x74, 0x3D, 0x22,
	0x22, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x69,
	0x74, 0x65, 0x6D, 0x3D, 0x22, 0x22, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x6D, 0x6F, 0x75, 0x73, 0x65, 0x5F, 0x72, 0x6F,
	0x74, 0x61, 0x74, 0x65, 0x3D, 0x22, 0x66, 0x61, 0x6C, 0x73, 0x65, 0x22,
	0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x68, 0x69,
	0x74, 0x74, 0x65, 0x73, 0x74, 0x3D, 0x22, 0x66, 0x61, 0x6C, 0x73, 0x65,
	0x22, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x2F, 0x49, 0x74,
	0x65, 0x6D, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x50, 0x61, 0x6E,
	0x65, 0x6C, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x3C, 0x2F, 0x50, 0x61,
	0x6E, 0x65, 0x6C, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x3C, 0x2F, 0x73, 0x6E,
	0x69, 0x70, 0x70, 0x65, 0x74, 0x3E, 0x0D, 0x0A, 0x09, 0x3C, 0x2F, 0x73,
	0x6E, 0x69, 0x70, 0x70, 0x65, 0x74, 0x73, 0x3E, 0x0D, 0x0A, 0x0D, 0x0A,
	0x09, 0x3C, 0x43, 0x53, 0x47, 0x4F, 0x4D, 0x61, 0x69, 0x6E, 0x4D, 0x65,
	0x6E, 0x75, 0x20, 0x63, 0x6C, 0x61, 0x73, 0x73, 0x3D, 0x22, 0x49, 0x6E,
	0x69, 0x74, 0x69, 0x61, 0x6C, 0x44, 0x69, 0x73, 0x70, 0x6C, 0x61, 0x79,
	0x20, 0x4D, 0x61, 0x69, 0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x52, 0x6F, 0x6F,
	0x74, 0x50, 0x61, 0x6E, 0x65, 0x6C, 0x22, 0x20, 0x68, 0x69, 0x74, 0x74,
	0x65, 0x73, 0x74, 0x3D, 0x22, 0x66, 0x61, 0x6C, 0x73, 0x65, 0x22, 0x20,
	0x75, 0x73, 0x65, 0x67, 0x6C, 0x6F, 0x62, 0x61, 0x6C, 0x63, 0x6F, 0x6E,
	0x74, 0x65, 0x78, 0x74, 0x3D, 0x22, 0x74, 0x72, 0x75, 0x65, 0x22, 0x20,
	0x6F, 0x6E, 0x63, 0x61, 0x6E, 0x63, 0x65, 0x6C, 0x3D, 0x22, 0x4D, 0x61,
	0x69, 0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x2E, 0x4F, 0x6E, 0x45, 0x73, 0x63,
	0x61, 0x70, 0x65, 0x4B, 0x65, 0x79, 0x50, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x64, 0x28, 0x29, 0x3B, 0x22, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x3C, 0x50,
	0x61, 0x6E, 0x65, 0x6C, 0x20, 0x69, 0x64, 0x3D, 0x22, 0x4D, 0x61, 0x69,
	0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x43, 0x6F, 0x6E, 0x74, 0x61, 0x69, 0x6E,
	0x65, 0x72, 0x50, 0x61, 0x6E, 0x65, 0x6C, 0x22, 0x20, 0x63, 0x6C, 0x61,
	0x73, 0x73, 0x3D, 0x22, 0x4D, 0x61, 0x69, 0x6E, 0x4D, 0x65, 0x6E, 0x75,
	0x43, 0x6F, 0x6E, 0x74, 0x61, 0x69, 0x6E, 0x65, 0x72, 0x22, 0x3E, 0x0D,
	0x0A, 0x09, 0x09, 0x09, 0x3C, 0x50, 0x61, 0x6E, 0x65, 0x6C, 0x09, 0x69,
	0x64, 0x3D, 0x22, 0x4E, 0x6F, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6F, 0x6E, 0x73, 0x43, 0x6F, 0x6E, 0x74, 0x61, 0x69, 0x6E, 0x65,
	0x72, 0x22, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x63, 0x6C, 0x61,
	0x73, 0x73, 0x3D, 0x22, 0x4D, 0x61, 0x69, 0x6E, 0x4D, 0x65, 0x6E, 0x75,
	0x4E, 0x6F, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6F, 0x6E,
	0x20, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6E, 0x20, 0x4D, 0x61, 0x69, 0x6E,
	0x4D, 0x65, 0x6E, 0x75, 0x4D, 0x6F, 0x64, 0x65, 0x4F, 0x6E, 0x6C, 0x79,
	0x22, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x6F, 0x6E, 0x6D, 0x6F,
	0x75, 0x73, 0x65, 0x6F, 0x76, 0x65, 0x72, 0x3D, 0x22, 0x4D, 0x61, 0x69,
	0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x2E, 0x53, 0x68, 0x6F, 0x77, 0x4E, 0x6F,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x42, 0x61,
	0x72, 0x54, 0x6F, 0x6F, 0x6C, 0x74, 0x69, 0x70, 0x28, 0x29, 0x3B, 0x22,
	0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x6F, 0x6E, 0x6D, 0x6F, 0x75,
	0x73, 0x65, 0x6F, 0x75, 0x74, 0x3D, 0x22, 0x55, 0x69, 0x54, 0x6F, 0x6F,
	0x6C, 0x6B, 0x69, 0x74, 0x41, 0x50, 0x49, 0x2E, 0x48, 0x69, 0x64, 0x65,
	0x54, 0x65, 0x78, 0x74, 0x54, 0x6F, 0x6F, 0x6C, 0x74, 0x69, 0x70, 0x28,
	0x29, 0x3B, 0x22, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x4C,
	0x61, 0x62, 0x65, 0x6C, 0x20, 0x69, 0x64, 0x3D, 0x22, 0x4D, 0x61, 0x69,
	0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x4E, 0x6F, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6F, 0x6E, 0x54, 0x69, 0x74, 0x6C, 0x65, 0x22, 0x2F,
	0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x3C, 0x2F, 0x50, 0x61, 0x6E, 0x65,
	0x6C, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x3C, 0x50, 0x61, 0x6E, 0x65,
	0x6C, 0x20, 0x69, 0x64, 0x3D, 0x22, 0x4D, 0x61, 0x69, 0x6E, 0x4D, 0x65,
	0x6E, 0x75, 0x49, 0x6E, 0x70, 0x75, 0x74, 0x22, 0x3E, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0D, 0x0A, 0x09, 0x09, 0x09,
	0x09, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x43, 0x53, 0x47, 0x4F,
	0x42, 0x6C, 0x75, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x20, 0x69,
	0x64, 0x3D, 0x22, 0x4D, 0x61, 0x69, 0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x43,
	0x6F, 0x72, 0x65, 0x22, 0x20, 0x62, 0x6C, 0x75, 0x72, 0x72, 0x65, 0x63,
	0x74, 0x73, 0x3D, 0x22, 0x43, 0x68, 0x61, 0x74, 0x4C, 0x69, 0x6E, 0x65,
	0x73, 0x43, 0x6F, 0x6E, 0x74, 0x61, 0x69, 0x6E, 0x65, 0x72, 0x42, 0x67,
	0x20, 0x6D, 0x61, 0x69, 0x6E, 0x6D, 0x65, 0x6E, 0x75, 0x2D, 0x73, 0x69,
	0x64, 0x65, 0x62, 0x61, 0x72, 0x5F, 0x5F, 0x62, 0x6C, 0x75, 0x72, 0x2D,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x20, 0x43, 0x53, 0x47, 0x4F, 0x4C,
	0x6F, 0x61, 0x64, 0x69, 0x6E, 0x67, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6E,
	0x20, 0x4A, 0x73, 0x4D, 0x61, 0x69, 0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x4E,
	0x61, 0x76, 0x42, 0x61, 0x72, 0x20, 0x65, 0x6F, 0x6D, 0x2D, 0x77, 0x69,
	0x6E, 0x6E, 0x65, 0x72, 0x22, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x3C, 0x43, 0x53, 0x47, 0x4F, 0x42, 0x6C, 0x75, 0x72, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x20, 0x69, 0x64, 0x3D, 0x22, 0x4D, 0x61, 0x69,
	0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x42, 0x61, 0x63, 0x6B, 0x67, 0x72, 0x6F,
	0x75, 0x6E, 0x64, 0x22, 0x20, 0x62, 0x6C, 0x75, 0x72, 0x72, 0x65, 0x63,
	0x74, 0x73, 0x3D, 0x20, 0x22, 0x6D, 0x61, 0x69, 0x6E, 0x6D, 0x65, 0x6E,
	0x75, 0x2D, 0x63, 0x6F, 0x6E, 0x74, 0x65, 0x6E, 0x74, 0x5F, 0x5F, 0x62,
	0x6C, 0x75, 0x72, 0x2D, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x20, 0x4A,
	0x73, 0x4E, 0x65, 0x77, 0x73, 0x50, 0x61, 0x6E, 0x65, 0x6C, 0x20, 0x4A,
	0x73, 0x53, 0x74, 0x6F, 0x72, 0x65, 0x50, 0x61, 0x6E, 0x65, 0x6C, 0x20,
	0x4A, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6D, 0x50, 0x61, 0x6E, 0x65,
	0x6C, 0x22, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x3C,
	0x50, 0x61, 0x6E, 0x65, 0x6C, 0x20, 0x63, 0x6C, 0x61, 0x73, 0x73, 0x3D,
	0x22, 0x6D, 0x61, 0x69, 0x6E, 0x6D, 0x65, 0x6E, 0x75, 0x2D, 0x76, 0x61,
	0x6E, 0x69, 0x74, 0x79, 0x5F, 0x5F, 0x76, 0x69, 0x67, 0x6E, 0x65, 0x74,
	0x74, 0x65, 0x22, 0x20, 0x68, 0x69, 0x74, 0x74, 0x65, 0x73, 0x74, 0x3D,
	0x22, 0x66, 0x61, 0x6C, 0x73, 0x65, 0x22, 0x2F, 0x3E, 0x0D, 0x0A, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0D,
	0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x43, 0x53, 0x47, 0x4F,
	0x42, 0x61, 0x63, 0x6B, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x49, 0x6D,
	0x61, 0x67, 0x65, 0x50, 0x61, 0x6E, 0x65, 0x6C, 0x20, 0x63, 0x6C, 0x61,
	0x73, 0x73, 0x3D, 0x22, 0x66, 0x75, 0x6C, 0x6C, 0x2D, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x20, 0x66, 0x75, 0x6C, 0x6C, 0x2D, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x20, 0x50, 0x61, 0x75, 0x73, 0x65, 0x4D, 0x65, 0x6E, 0x75,
	0x4D, 0x6F, 0x64, 0x65, 0x4F, 0x6E, 0x6C, 0x79, 0x22, 0x20, 0x2F, 0x3E,
	0x0D, 0x0A, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0D, 0x0A,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0D, 0x0A, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x50, 0x61,
	0x6E, 0x65, 0x6C, 0x20, 0x69, 0x64, 0x3D, 0x22, 0x4D, 0x61, 0x69, 0x6E,
	0x4D, 0x65, 0x6E, 0x75, 0x4D, 0x6F, 0x76, 0x69, 0x65, 0x50, 0x61, 0x72,
	0x65, 0x6E, 0x74, 0x22, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x09, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x3C, 0x2F, 0x50, 0x61, 0x6E, 0x65, 0x6C, 0x3E, 0x0D, 0x0A, 0x09, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0D, 0x0A, 0x09, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x3C, 0x50, 0x61, 0x6E, 0x65, 0x6C, 0x20, 0x69,
	0x64, 0x3D, 0x22, 0x4D, 0x61, 0x69, 0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x56,
	0x61, 0x6E, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x65, 0x6E, 0x74, 0x22,
	0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0D,
	0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x2F, 0x50, 0x61, 0x6E,
	0x65, 0x6C, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x2F,
	0x43, 0x53, 0x47, 0x4F, 0x42, 0x6C, 0x75, 0x72, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x3E, 0x0D, 0x0A, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x3C, 0x50, 0x61, 0x6E, 0x65, 0x6C, 0x20, 0x69, 0x64, 0x3D, 0x22, 0x4A,
	0x73, 0x4E, 0x65, 0x77, 0x73, 0x43, 0x6F, 0x6E, 0x74, 0x61, 0x69, 0x6E,
	0x65, 0x72, 0x22, 0x20, 0x63, 0x6C, 0x61, 0x73, 0x73, 0x3D, 0x22, 0x6D,
	0x61, 0x69, 0x6E, 0x6D, 0x65, 0x6E, 0x75, 0x5F, 0x6E, 0x65, 0x77, 0x73,
	0x5F, 0x63, 0x6F, 0x6E, 0x74, 0x61, 0x69, 0x6E, 0x65, 0x72, 0x20, 0x68,
	0x69, 0x64, 0x64, 0x65, 0x6E, 0x20, 0x4D, 0x61, 0x69, 0x6E, 0x4D, 0x65,
	0x6E, 0x75, 0x4D, 0x6F, 0x64, 0x65, 0x4F, 0x6E, 0x6C, 0x79, 0x22, 0x20,
	0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x3C,
	0x2F, 0x50, 0x61, 0x6E, 0x65, 0x6C, 0x20, 0x3E, 0x0D, 0x0A, 0x0D, 0x0A,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x50, 0x61, 0x6E, 0x65, 0x6C, 0x20,
	0x69, 0x64, 0x3D, 0x22, 0x4A, 0x73, 0x4D, 0x61, 0x69, 0x6E, 0x4D, 0x65,
	0x6E, 0x75, 0x43, 0x6F, 0x6E, 0x74, 0x65, 0x6E, 0x74, 0x22, 0x20, 0x63,
	0x6C, 0x61, 0x73, 0x73, 0x3D, 0x22, 0x6D, 0x61, 0x69, 0x6E, 0x6D, 0x65,
	0x6E, 0x75, 0x2D, 0x63, 0x6F, 0x6E, 0x74, 0x65, 0x6E, 0x74, 0x20, 0x6D,
	0x61, 0x69, 0x6E, 0x6D, 0x65, 0x6E, 0x75, 0x2D, 0x63, 0x6F, 0x6E, 0x74,
	0x65, 0x6E, 0x74, 0x2D, 0x2D, 0x6F, 0x66, 0x66, 0x73, 0x63, 0x72, 0x65,
	0x65, 0x6E, 0x22, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x3C, 0x50, 0x61, 0x6E, 0x65, 0x6C, 0x20, 0x63, 0x6C, 0x61, 0x73, 0x73,
	0x3D, 0x22, 0x6D, 0x61, 0x69, 0x6E, 0x6D, 0x65, 0x6E, 0x75, 0x2D, 0x63,
	0x6F, 0x6E, 0x74, 0x65, 0x6E, 0x74, 0x5F, 0x5F, 0x62, 0x6C, 0x75, 0x72,
	0x22, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x3C,
	0x50, 0x61, 0x6E, 0x65, 0x6C, 0x20, 0x69, 0x64, 0x3D, 0x22, 0x6D, 0x61,
	0x69, 0x6E, 0x6D, 0x65, 0x6E, 0x75, 0x2D, 0x63, 0x6F, 0x6E, 0x74, 0x65,
	0x6E, 0x74, 0x5F, 0x5F, 0x62, 0x6C, 0x75, 0x72, 0x2D, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x22, 0x2F, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x09, 0x3C, 0x2F, 0x50, 0x61, 0x6E, 0x65, 0x6C, 0x3E, 0x0D, 0x0A,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x3C, 0x2F, 0x50, 0x61, 0x6E, 0x65, 0x6C, 0x20, 0x3E, 0x0D, 0x0A,
	0x09, 0x09, 0x09, 0x09, 0x3C, 0x2F, 0x43, 0x53, 0x47, 0x4F, 0x42, 0x6C,
	0x75, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x3E, 0x0D, 0x0A, 0x0D,
	0x0A, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x43, 0x53, 0x47, 0x4F,
	0x42, 0x6C, 0x75, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x20, 0x69,
	0x64, 0x3D, 0x22, 0x4D, 0x61, 0x69, 0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x4E,
	0x61, 0x76, 0x42, 0x61, 0x72, 0x4C, 0x65, 0x66, 0x74, 0x22, 0x20, 0x63,
	0x6C, 0x61, 0x73, 0x73, 0x3D, 0x22, 0x6D, 0x61, 0x69, 0x6E, 0x6D, 0x65,
	0x6E, 0x75, 0x2D, 0x6E, 0x61, 0x76, 0x62, 0x61, 0x72, 0x2D, 0x63, 0x6F,
	0x6E, 0x74, 0x61, 0x69, 0x6E, 0x65, 0x72, 0x22, 0x20, 0x62, 0x6C, 0x75,
	0x72, 0x72, 0x65, 0x63, 0x74, 0x73, 0x3D, 0x22, 0x43, 0x53, 0x47, 0x4F,
	0x4C, 0x6F, 0x61, 0x64, 0x69, 0x6E, 0x67, 0x53, 0x63, 0x72, 0x65, 0x65,
	0x6E, 0x22, 0x3E, 0x0D, 0x0A, 0x09, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x3C, 0x50, 0x61, 0x6E, 0x65, 0x6C, 0x20, 0x69, 0x64, 0x3D, 0x22,
	0x4A, 0x73, 0x4D, 0x61, 0x69, 0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x4E, 0x61,
	0x76, 0x42, 0x61, 0x72, 0x22, 0x20, 0x63, 0x6C, 0x61, 0x73, 0x73, 0x3D,
	0x22, 0x6D, 0x61, 0x69, 0x6E, 0x6D, 0x65, 0x6E, 0x75, 0x2D, 0x6E, 0x61,
	0x76, 0x62, 0x61, 0x72, 0x22, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x09, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0D, 0x0A,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x52, 0x61, 0x64, 0x69, 0x6F,
	0x42, 0x75, 0x74, 0x74, 0x6F, 0x6E, 0x20, 0x69, 0x64, 0x3D, 0x22, 0x4D,
	0x61, 0x69, 0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x4E, 0x61, 0x76, 0x42, 0x61,
	0x72, 0x48, 0x6F, 0x6D, 0x65, 0x22, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x63, 0x6C, 0x61, 0x73, 0x73, 0x3D, 0x22,
	0x6D, 0x61, 0x69, 0x6E, 0x6D, 0x65, 0x6E, 0x75, 0x2D, 0x6E, 0x61, 0x76,
	0x62, 0x61, 0x72, 0x5F, 0x5F, 0x62, 0x74, 0x6E, 0x2D, 0x73, 0x6D, 0x61,
	0x6C, 0x6C, 0x20, 0x6D, 0x61, 0x69, 0x6E, 0x6D, 0x65, 0x6E, 0x75, 0x2D,
	0x6E, 0x61, 0x76, 0x62, 0x61, 0x72, 0x5F, 0x5F, 0x62, 0x74, 0x6E, 0x2D,
	0x68, 0x6F, 0x6D, 0x65, 0x20, 0x4D, 0x61, 0x69, 0x6E, 0x4D, 0x65, 0x6E,
	0x75, 0x4D, 0x6F, 0x64, 0x65, 0x4F, 0x6E, 0x6C, 0x79, 0x22, 0x0D, 0x0A,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x67, 0x72, 0x6F,
	0x75, 0x70, 0x3D, 0x22, 0x4E, 0x61, 0x76, 0x42, 0x61, 0x72, 0x22, 0x0D,
	0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x6F, 0x6E,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x3D, 0x22, 0x4D, 0x61,
	0x69, 0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x2E, 0x4F, 0x6E, 0x48, 0x6F, 0x6D,
	0x65, 0x42, 0x75, 0x74, 0x74, 0x6F, 0x6E, 0x50, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x64, 0x28, 0x29, 0x3B, 0x20, 0x24, 0x2E, 0x44, 0x69, 0x73, 0x70,
	0x61, 0x74, 0x63, 0x68, 0x45, 0x76, 0x65, 0x6E, 0x74, 0x28, 0x20, 0x27,
	0x50, 0x6C, 0x61, 0x79, 0x53, 0x6F, 0x75, 0x6E, 0x64, 0x45, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x27, 0x2C, 0x20, 0x27, 0x6D, 0x61, 0x69, 0x6E, 0x6D,
	0x65, 0x6E, 0x75, 0x5F, 0x70, 0x72, 0x65, 0x73, 0x73, 0x5F, 0x68, 0x6F,
	0x6D, 0x65, 0x27, 0x2C, 0x20, 0x27, 0x4D, 0x4F, 0x55, 0x53, 0x45, 0x27,
	0x20, 0x29, 0x3B, 0x20, 0x24, 0x2E, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74,
	0x63, 0x68, 0x45, 0x76, 0x65, 0x6E, 0x74, 0x28, 0x27, 0x50, 0x6C, 0x61,
	0x79, 0x4D, 0x61, 0x69, 0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x4D, 0x75, 0x73,
	0x69, 0x63, 0x27, 0x2C, 0x20, 0x74, 0x72, 0x75, 0x65, 0x2C, 0x20, 0x74,
	0x72, 0x75, 0x65, 0x29, 0x3B, 0x20, 0x47, 0x61, 0x6D, 0x65, 0x49, 0x6E,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x41, 0x50, 0x49, 0x2E, 0x53,
	0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6E, 0x67, 0x53, 0x74, 0x72,
	0x69, 0x6E, 0x67, 0x28, 0x27, 0x70, 0x61, 0x6E, 0x6F, 0x72, 0x61, 0x6D,
	0x61, 0x5F, 0x70, 0x6C, 0x61, 0x79, 0x5F, 0x6D, 0x6F, 0x76, 0x69, 0x65,
	0x5F, 0x61, 0x6D, 0x62, 0x69, 0x65, 0x6E, 0x74, 0x5F, 0x73, 0x6F, 0x75,
	0x6E, 0x64, 0x27, 0x2C, 0x20, 0x27, 0x31, 0x27, 0x29, 0x3B, 0x22, 0x0D,
	0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x6F, 0x6E,
	0x6D, 0x6F, 0x75, 0x73, 0x65, 0x6F, 0x76, 0x65, 0x72, 0x3D, 0x22, 0x55,
	0x69, 0x54, 0x6F, 0x6F, 0x6C, 0x6B, 0x69, 0x74, 0x41, 0x50, 0x49, 0x2E,
	0x53, 0x68, 0x6F, 0x77, 0x54, 0x65, 0x78, 0x74, 0x54, 0x6F, 0x6F, 0x6C,
	0x74, 0x69, 0x70, 0x28, 0x27, 0x4D, 0x61, 0x69, 0x6E, 0x4D, 0x65, 0x6E,
	0x75, 0x4E, 0x61, 0x76, 0x42, 0x61, 0x72, 0x48, 0x6F, 0x6D, 0x65, 0x27,
	0x2C, 0x20, 0x27, 0x23, 0x74, 0x6F, 0x6F, 0x6C, 0x74, 0x69, 0x70, 0x5F,
	0x6E, 0x61, 0x76, 0x62, 0x61, 0x72, 0x5F, 0x68, 0x6F, 0x6D, 0x65, 0x27,
	0x29, 0x3B, 0x22, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x09, 0x6F, 0x6E, 0x6D, 0x6F, 0x75, 0x73, 0x65, 0x6F, 0x75, 0x74,
	0x3D, 0x22, 0x55, 0x69, 0x54, 0x6F, 0x6F, 0x6C, 0x6B, 0x69, 0x74, 0x41,
	0x50, 0x49, 0x2E, 0x48, 0x69, 0x64, 0x65, 0x54, 0x65, 0x78, 0x74, 0x54,
	0x6F, 0x6F, 0x6C, 0x74, 0x69, 0x70, 0x28, 0x29, 0x3B, 0x22, 0x3E, 0x0D,
	0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x49, 0x6D, 0x61,
	0x67, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x3D, 0x22, 0x33, 0x32, 0x22, 0x20, 0x74, 0x65,
	0x78, 0x74, 0x75, 0x72, 0x65, 0x77, 0x69, 0x64, 0x74, 0x68, 0x3D, 0x22,
	0x2D, 0x31, 0x22, 0x20, 0x73, 0x72, 0x63, 0x3D, 0x22, 0x66, 0x69, 0x6C,
	0x65, 0x3A, 0x2F, 0x2F, 0x7B, 0x69, 0x6D, 0x61, 0x67, 0x65, 0x73, 0x7D,
	0x2F, 0x69, 0x63, 0x6F, 0x6E, 0x73, 0x2F, 0x75, 0x69, 0x2F, 0x63, 0x73,
	0x67, 0x6F, 0x6C, 0x6F, 0x67, 0x6F, 0x2E, 0x73, 0x76, 0x67, 0x22, 0x20,
	0x2F, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x2F,
	0x52, 0x61, 0x64, 0x69, 0x6F, 0x42, 0x75, 0x74, 0x74, 0x6F, 0x6E, 0x3E,
	0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x52, 0x61, 0x64,
	0x69, 0x6F, 0x42, 0x75, 0x74, 0x74, 0x6F, 0x6E, 0x20, 0x69, 0x64, 0x3D,
	0x22, 0x4D, 0x61, 0x69, 0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x4E, 0x61, 0x76,
	0x42, 0x61, 0x72, 0x50, 0x6C, 0x61, 0x79, 0x22, 0x0D, 0x0A, 0x09, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x63, 0x6C, 0x61, 0x73, 0x73,
	0x3D, 0x22, 0x6D, 0x61, 0x69, 0x6E, 0x6D, 0x65, 0x6E, 0x75, 0x2D, 0x6E,
	0x61, 0x76, 0x62, 0x61, 0x72, 0x5F, 0x5F, 0x62, 0x74, 0x6E, 0x2D, 0x73,
	0x6D, 0x61, 0x6C, 0x6C, 0x20, 0x6D, 0x61, 0x69, 0x6E, 0x6D, 0x65, 0x6E,
	0x75, 0x2D, 0x6E, 0x61, 0x76, 0x62, 0x61, 0x72, 0x5F, 0x5F, 0x62, 0x74,
	0x6E, 0x2D, 0x70, 0x6C, 0x61, 0x79, 0x22, 0x0D, 0x0A, 0x09, 0x09, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x67, 0x72, 0x6F, 0x75, 0x70, 0x3D,
	0x22, 0x4E, 0x61, 0x76, 0x42, 0x61, 0x72, 0x22, 0x0D, 0x0A, 0x09, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x6F, 0x6E, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x3D, 0x22, 0x24, 0x2E, 0x44, 0x69, 0x73,
	0x70, 0x61, 0x74, 0x63, 0x68, 0x45, 0x76, 0x65, 0x6E, 0x74, 0x28, 0x27,
	0x4F, 0x70, 0x65, 0x6E, 0x50, 0x6C, 0x61, 0x79, 0x4D, 0x65, 0x6E, 0x75,
	0x27, 0x29, 0x3B, 0x22, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x09, 0x09, 0x6F, 0x6E, 0x6D, 0x6F, 0x75, 0x73, 0x65, 0x6F, 0x76,
	0x65, 0x72, 0x3D, 0x22, 0x55, 0x69, 0x54, 0x6F, 0x6F, 0x6C, 0x6B, 0x69,
	0x74, 0x41, 0x50, 0x49, 0x2E, 0x53, 0x68, 0x6F, 0x77, 0x54, 0x65, 0x78,
	0x74, 0x54, 0x6F, 0x6F, 0x6C, 0x74, 0x69, 0x70, 0x28, 0x27, 0x4D, 0x61,
	0x69, 0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x4E, 0x61, 0x76, 0x42, 0x61, 0x72,
	0x50, 0x6C, 0x61, 0x79, 0x27, 0x2C, 0x20, 0x27, 0x23, 0x74, 0x6F, 0x6F,
	0x6C, 0x74, 0x69, 0x70, 0x5F, 0x6E, 0x61, 0x76, 0x62, 0x61, 0x72, 0x5F,
	0x70, 0x6C, 0x61, 0x79, 0x27, 0x29, 0x3B, 0x22, 0x0D, 0x0A, 0x09, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x6F, 0x6E, 0x6D, 0x6F, 0x75,
	0x73, 0x65, 0x6F, 0x75, 0x74, 0x3D, 0x22, 0x55, 0x69, 0x54, 0x6F, 0x6F,
	0x6C, 0x6B, 0x69, 0x74, 0x41, 0x50, 0x49, 0x2E, 0x48, 0x69, 0x64, 0x65,
	0x54, 0x65, 0x78, 0x74, 0x54, 0x6F, 0x6F, 0x6C, 0x74, 0x69, 0x70, 0x28,
	0x29, 0x3B, 0x22, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x3C, 0x49, 0x6D, 0x61, 0x67, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74,
	0x75, 0x72, 0x65, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x3D, 0x22, 0x35,
	0x36, 0x22, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x3D, 0x22, 0x2D, 0x31, 0x22, 0x20, 0x73, 0x72, 0x63,
	0x3D, 0x22, 0x66, 0x69, 0x6C, 0x65, 0x3A, 0x2F, 0x2F, 0x7B, 0x69, 0x6D,
	0x61, 0x67, 0x65, 0x73, 0x7D, 0x2F, 0x69, 0x63, 0x6F, 0x6E, 0x73, 0x2F,
	0x75, 0x69, 0x2F, 0x70, 0x6C, 0x61, 0x79, 0x5F, 0x63, 0x69, 0x72, 0x63,
	0x6C, 0x65, 0x2E, 0x73, 0x76, 0x67, 0x22, 0x20, 0x2F, 0x3E, 0x0D, 0x0A,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x2F, 0x52, 0x61, 0x64, 0x69,
	0x6F, 0x42, 0x75, 0x74, 0x74, 0x6F, 0x6E, 0x3E, 0x0D, 0x0A, 0x09, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0D, 0x0A, 0x09, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x3C, 0x52, 0x61, 0x64, 0x69, 0x6F, 0x42, 0x75,
	0x74, 0x74, 0x6F, 0x6E, 0x20, 0x69, 0x64, 0x3D, 0x22, 0x4D, 0x61, 0x69,
	0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x4E, 0x61, 0x76, 0x42, 0x61, 0x72, 0x52,
	0x65, 0x73, 0x75, 0x6D, 0x65, 0x47, 0x61, 0x6D, 0x65, 0x22, 0x0D, 0x0A,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x63, 0x6C, 0x61,
	0x73, 0x73, 0x3D, 0x22, 0x6D, 0x61, 0x69, 0x6E, 0x6D, 0x65, 0x6E, 0x75,
	0x2D, 0x6E, 0x61, 0x76, 0x62, 0x61, 0x72, 0x5F, 0x5F, 0x62, 0x74, 0x6E,
	0x2D, 0x73, 0x6D, 0x61, 0x6C, 0x6C, 0x20, 0x50, 0x61, 0x75, 0x73, 0x65,
	0x4D, 0x65, 0x6E, 0x75, 0x4D, 0x6F, 0x64, 0x65, 0x4F, 0x6E, 0x6C, 0x79,
	0x22, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x67, 0x72, 0x6F, 0x75, 0x70, 0x3D, 0x22, 0x4E, 0x61, 0x76, 0x42, 0x61,
	0x72, 0x22, 0x20, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x09, 0x6F, 0x6E, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x3D, 0x22, 0x24, 0x2E, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68,
	0x45, 0x76, 0x65, 0x6E, 0x74, 0x28, 0x20, 0x27, 0x43, 0x53, 0x47, 0x4F,
	0x4D, 0x61, 0x69, 0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x52, 0x65, 0x73, 0x75,
	0x6D, 0x65, 0x47, 0x61, 0x6D, 0x65, 0x27, 0x20, 0x29, 0x3B, 0x22, 0x0D,
	0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x6F, 0x6E,
	0x6D, 0x6F, 0x75, 0x73, 0x65, 0x6F, 0x76, 0x65, 0x72, 0x3D, 0x22, 0x55,
	0x69, 0x54, 0x6F, 0x6F, 0x6C, 0x6B, 0x69, 0x74, 0x41, 0x50, 0x49, 0x2E,
	0x53, 0x68, 0x6F, 0x77, 0x54, 0x65, 0x78, 0x74, 0x54, 0x6F, 0x6F, 0x6C,
	0x74, 0x69, 0x70, 0x28, 0x20, 0x27, 0x4D, 0x61, 0x69, 0x6E, 0x4D, 0x65,
	0x6E, 0x75, 0x4E, 0x61, 0x76, 0x42, 0x61, 0x72, 0x52, 0x65, 0x73, 0x75,
	0x6D, 0x65, 0x47, 0x61, 0x6D, 0x65, 0x27, 0x2C, 0x20, 0x27, 0x23, 0x74,
	0x6F, 0x6F, 0x6C, 0x74, 0x69, 0x70, 0x5F, 0x6E, 0x61, 0x76, 0x62, 0x61,
	0x72, 0x5F, 0x72, 0x65, 0x73, 0x75, 0x6D, 0x65, 0x5F, 0x67, 0x61, 0x6D,
	0x65, 0x27, 0x20, 0x29, 0x3B, 0x22, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x6F, 0x6E, 0x6D, 0x6F, 0x75, 0x73, 0x65,
	0x6F, 0x75, 0x74, 0x3D, 0x22, 0x55, 0x69, 0x54, 0x6F, 0x6F, 0x6C, 0x6B,
	0x69, 0x74, 0x41, 0x50, 0x49, 0x2E, 0x48, 0x69, 0x64, 0x65, 0x54, 0x65,
	0x78, 0x74, 0x54, 0x6F, 0x6F, 0x6C, 0x74, 0x69, 0x70, 0x28, 0x29, 0x3B,
	0x22, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x3C,
	0x49, 0x6D, 0x61, 0x67, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72,
	0x65, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x3D, 0x22, 0x34, 0x32, 0x22,
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x3D, 0x22, 0x2D, 0x31, 0x22, 0x20, 0x73, 0x72, 0x63, 0x3D, 0x22,
	0x66, 0x69, 0x6C, 0x65, 0x3A, 0x2F, 0x2F, 0x7B, 0x69, 0x6D, 0x61, 0x67,
	0x65, 0x73, 0x7D, 0x2F, 0x69, 0x63, 0x6F, 0x6E, 0x73, 0x2F, 0x75, 0x69,
	0x2F, 0x52, 0x65, 0x73, 0x75, 0x6D, 0x65, 0x47, 0x61, 0x6D, 0x65, 0x2E,
	0x73, 0x76, 0x67, 0x22, 0x20, 0x2F, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09,
	0x09, 0x09, 0x09, 0x3C, 0x2F, 0x52, 0x61, 0x64, 0x69, 0x6F, 0x42, 0x75,
	0x74, 0x74, 0x6F, 0x6E, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x3C, 0x42, 0x75, 0x74, 0x74, 0x6F, 0x6E, 0x20, 0x69, 0x64, 0x3D,
	0x22, 0x4D, 0x61, 0x69, 0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x4E, 0x61, 0x76,
	0x42, 0x61, 0x72, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x54, 0x65, 0x61,
	0x6D, 0x73, 0x22, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x09, 0x63, 0x6C, 0x61, 0x73, 0x73, 0x3D, 0x22, 0x6D, 0x61, 0x69,
	0x6E, 0x6D, 0x65, 0x6E, 0x75, 0x2D, 0x6E, 0x61, 0x76, 0x62, 0x61, 0x72,
	0x5F, 0x5F, 0x62, 0x74, 0x6E, 0x2D, 0x73, 0x6D, 0x61, 0x6C, 0x6C, 0x20,
	0x50, 0x61, 0x75, 0x73, 0x65, 0x4D, 0x65, 0x6E, 0x75, 0x4D, 0x6F, 0x64,
	0x65, 0x4F, 0x6E, 0x6C, 0x79, 0x22, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x6F, 0x6E, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x3D, 0x22, 0x24, 0x2E, 0x44, 0x69, 0x73, 0x70, 0x61,
	0x74, 0x63, 0x68, 0x45, 0x76, 0x65, 0x6E, 0x74, 0x28, 0x20, 0x27, 0x43,
	0x53, 0x47, 0x4F, 0x4D, 0x61, 0x69, 0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x53,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x54, 0x65, 0x61, 0x6D, 0x73, 0x27, 0x20,
	0x29, 0x3B, 0x22, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x09, 0x6F, 0x6E, 0x6D, 0x6F, 0x75, 0x73, 0x65, 0x6F, 0x76, 0x65,
	0x72, 0x3D, 0x22, 0x55, 0x69, 0x54, 0x6F, 0x6F, 0x6C, 0x6B, 0x69, 0x74,
	0x41, 0x50, 0x49, 0x2E, 0x53, 0x68, 0x6F, 0x77, 0x54, 0x65, 0x78, 0x74,
	0x54, 0x6F, 0x6F, 0x6C, 0x74, 0x69, 0x70, 0x28, 0x20, 0x27, 0x4D, 0x61,
	0x69, 0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x4E, 0x61, 0x76, 0x42, 0x61, 0x72,
	0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x54, 0x65, 0x61, 0x6D, 0x73, 0x27,
	0x2C, 0x20, 0x27, 0x23, 0x74, 0x6F, 0x6F, 0x6C, 0x74, 0x69, 0x70, 0x5F,
	0x6E, 0x61, 0x76, 0x62, 0x61, 0x72, 0x5F, 0x73, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x5F, 0x74, 0x65, 0x61, 0x6D, 0x73, 0x27, 0x20, 0x29, 0x3B, 0x22,
	0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x6F,
	0x6E, 0x6D, 0x6F, 0x75, 0x73, 0x65, 0x6F, 0x75, 0x74, 0x3D, 0x22, 0x55,
	0x69, 0x54, 0x6F, 0x6F, 0x6C, 0x6B, 0x69, 0x74, 0x41, 0x50, 0x49, 0x2E,
	0x48, 0x69, 0x64, 0x65, 0x54, 0x65, 0x78, 0x74, 0x54, 0x6F, 0x6F, 0x6C,
	0x74, 0x69, 0x70, 0x28, 0x29, 0x3B, 0x22, 0x3E, 0x0D, 0x0A, 0x09, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x49, 0x6D, 0x61, 0x67, 0x65, 0x20,
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x3D, 0x22, 0x34, 0x30, 0x22, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75,
	0x72, 0x65, 0x77, 0x69, 0x64, 0x74, 0x68, 0x3D, 0x22, 0x2D, 0x31, 0x22,
	0x20, 0x73, 0x72, 0x63, 0x3D, 0x22, 0x66, 0x69, 0x6C, 0x65, 0x3A, 0x2F,
	0x2F, 0x7B, 0x69, 0x6D, 0x61, 0x67, 0x65, 0x73, 0x7D, 0x2F, 0x69, 0x63,
	0x6F, 0x6E, 0x73, 0x2F, 0x75, 0x69, 0x2F, 0x56, 0x6F, 0x74, 0x65, 0x54,
	0x65, 0x61, 0x6D, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x2E, 0x73, 0x76,
	0x67, 0x22, 0x20, 0x2F, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x3C, 0x2F, 0x42, 0x75, 0x74, 0x74, 0x6F, 0x6E, 0x3E, 0x0D, 0x0A,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0D, 0x0A, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x42, 0x75, 0x74, 0x74, 0x6F, 0x6E,
	0x20, 0x69, 0x64, 0x3D, 0x22, 0x4D, 0x61, 0x69, 0x6E, 0x4D, 0x65, 0x6E,
	0x75, 0x4E, 0x61, 0x76, 0x42, 0x61, 0x72, 0x56, 0x6F, 0x74, 0x65, 0x22,
	0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x63,
	0x6C, 0x61, 0x73, 0x73, 0x3D, 0x22, 0x6D, 0x61, 0x69, 0x6E, 0x6D, 0x65,
	0x6E, 0x75, 0x2D, 0x6E, 0x61, 0x76, 0x62, 0x61, 0x72, 0x5F, 0x5F, 0x62,
	0x74, 0x6E, 0x2D, 0x73, 0x6D, 0x61, 0x6C, 0x6C, 0x20, 0x50, 0x61, 0x75,
	0x73, 0x65, 0x4D, 0x65, 0x6E, 0x75, 0x4D, 0x6F, 0x64, 0x65, 0x4F, 0x6E,
	0x6C, 0x79, 0x22, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x09, 0x6F, 0x6E, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x3D, 0x22, 0x4D, 0x61, 0x69, 0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x2E, 0x53,
	0x68, 0x6F, 0x77, 0x56, 0x6F, 0x74, 0x65, 0x28, 0x29, 0x22, 0x0D, 0x0A,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x6F, 0x6E, 0x63,
	0x6F, 0x6E, 0x74, 0x65, 0x78, 0x74, 0x6D, 0x65, 0x6E, 0x75, 0x3D, 0x22,
	0x4D, 0x61, 0x69, 0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x2E, 0x53, 0x68, 0x6F,
	0x77, 0x56, 0x6F, 0x74, 0x65, 0x28, 0x29, 0x22, 0x0D, 0x0A, 0x09, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x6F, 0x6E, 0x6D, 0x6F, 0x75,
	0x73, 0x65, 0x6F, 0x76, 0x65, 0x72, 0x3D, 0x22, 0x55, 0x69, 0x54, 0x6F,
	0x6F, 0x6C, 0x6B, 0x69, 0x74, 0x41, 0x50, 0x49, 0x2E, 0x53, 0x68, 0x6F,
	0x77, 0x54, 0x65, 0x78, 0x74, 0x54, 0x6F, 0x6F, 0x6C, 0x74, 0x69, 0x70,
	0x28, 0x20, 0x27, 0x4D, 0x61, 0x69, 0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x4E,
	0x61, 0x76, 0x42, 0x61, 0x72, 0x56, 0x6F, 0x74, 0x65, 0x27, 0x2C, 0x20,
	0x27, 0x23, 0x74, 0x6F, 0x6F, 0x6C, 0x74, 0x69, 0x70, 0x5F, 0x6E, 0x61,
	0x76, 0x62, 0x61, 0x72, 0x5F, 0x76, 0x6F, 0x74, 0x65, 0x27, 0x20, 0x29,
	0x3B, 0x22, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x6F, 0x6E, 0x6D, 0x6F, 0x75, 0x73, 0x65, 0x6F, 0x75, 0x74, 0x3D,
	0x22, 0x55, 0x69, 0x54, 0x6F, 0x6F, 0x6C, 0x6B, 0x69, 0x74, 0x41, 0x50,
	0x49, 0x2E, 0x48, 0x69, 0x64, 0x65, 0x54, 0x65, 0x78, 0x74, 0x54, 0x6F,
	0x6F, 0x6C, 0x74, 0x69, 0x70, 0x28, 0x29, 0x3B, 0x22, 0x3E, 0x0D, 0x0A,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x49, 0x6D, 0x61, 0x67,
	0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x3D, 0x22, 0x33, 0x32, 0x22, 0x20, 0x74, 0x65, 0x78,
	0x74, 0x75, 0x72, 0x65, 0x77, 0x69, 0x64, 0x74, 0x68, 0x3D, 0x22, 0x2D,
	0x31, 0x22, 0x20, 0x73, 0x72, 0x63, 0x3D, 0x22, 0x66, 0x69, 0x6C, 0x65,
	0x3A, 0x2F, 0x2F, 0x7B, 0x69, 0x6D, 0x61, 0x67, 0x65, 0x73, 0x7D, 0x2F,
	0x69, 0x63, 0x6F, 0x6E, 0x73, 0x2F, 0x75, 0x69, 0x2F, 0x63, 0x68, 0x65,
	0x63, 0x6B, 0x2E, 0x73, 0x76, 0x67, 0x22, 0x20, 0x2F, 0x3E, 0x0D, 0x0A,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x2F, 0x42, 0x75, 0x74, 0x74,
	0x6F, 0x6E, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x3C, 0x42, 0x75, 0x74, 0x74, 0x6F, 0x6E, 0x20, 0x69, 0x64, 0x3D,
	0x22, 0x4D, 0x61, 0x69, 0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x4E, 0x61, 0x76,
	0x42, 0x61, 0x72, 0x52, 0x65, 0x70, 0x6F, 0x72, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x22, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x09, 0x09, 0x63, 0x6C, 0x61, 0x73, 0x73, 0x3D, 0x22, 0x6D, 0x61,
	0x69, 0x6E, 0x6D, 0x65, 0x6E, 0x75, 0x2D, 0x6E, 0x61, 0x76, 0x62, 0x61,
	0x72, 0x5F, 0x5F, 0x62, 0x74, 0x6E, 0x2D, 0x73, 0x6D, 0x61, 0x6C, 0x6C,
	0x20, 0x50, 0x61, 0x75, 0x73, 0x65, 0x4D, 0x65, 0x6E, 0x75, 0x4D, 0x6F,
	0x64, 0x65, 0x4F, 0x6E, 0x6C, 0x79, 0x22, 0x0D, 0x0A, 0x09, 0x09, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x6F, 0x6E, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x3D, 0x22, 0x55, 0x69, 0x54, 0x6F, 0x6F, 0x6C,
	0x6B, 0x69, 0x74, 0x41, 0x50, 0x49, 0x2E, 0x53, 0x68, 0x6F, 0x77, 0x43,
	0x75, 0x73, 0x74, 0x6F, 0x6D, 0x4C, 0x61, 0x79, 0x6F, 0x75, 0x74, 0x50,
	0x6F, 0x70, 0x75, 0x70, 0x50, 0x61, 0x72, 0x61, 0x6D, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x28, 0x27, 0x27, 0x2C, 0x20, 0x27, 0x66, 0x69, 0x6C, 0x65,
	0x3A, 0x2F, 0x2F, 0x7B, 0x72, 0x65, 0x73, 0x6F, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x7D, 0x2F, 0x6C, 0x61, 0x79, 0x6F, 0x75, 0x74, 0x2F, 0x70, 0x6F,
	0x70, 0x75, 0x70, 0x73, 0x2F, 0x70, 0x6F, 0x70, 0x75, 0x70, 0x5F, 0x72,
	0x65, 0x70, 0x6F, 0x72, 0x74, 0x5F, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2E, 0x78, 0x6D, 0x6C, 0x27, 0x2C, 0x20, 0x27, 0x27, 0x20, 0x29, 0x3B,
	0x22, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x6F, 0x6E, 0x6D, 0x6F, 0x75, 0x73, 0x65, 0x6F, 0x76, 0x65, 0x72, 0x3D,
	0x22, 0x55, 0x69, 0x54, 0x6F, 0x6F, 0x6C, 0x6B, 0x69, 0x74, 0x41, 0x50,
	0x49, 0x2E, 0x53, 0x68, 0x6F, 0x77, 0x54, 0x65, 0x78, 0x74, 0x54, 0x6F,
	0x6F, 0x6C, 0x74, 0x69, 0x70, 0x28, 0x20, 0x27, 0x4D, 0x61, 0x69, 0x6E,
	0x4D, 0x65, 0x6E, 0x75, 0x4E, 0x61, 0x76, 0x42, 0x61, 0x72, 0x52, 0x65,
	0x70, 0x6F, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x27, 0x2C,
	0x20, 0x27, 0x23, 0x74, 0x6F, 0x6F, 0x6C, 0x74, 0x69, 0x70, 0x5F, 0x6E,
	0x61, 0x76, 0x62, 0x61, 0x72, 0x5F, 0x72, 0x65, 0x70, 0x6F, 0x72, 0x74,
	0x5F, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x27, 0x20, 0x29, 0x3B, 0x22,
	0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x6F,
	0x6E, 0x6D, 0x6F, 0x75, 0x73, 0x65, 0x6F, 0x75, 0x74, 0x3D, 0x22, 0x55,
	0x69, 0x54, 0x6F, 0x6F, 0x6C, 0x6B, 0x69, 0x74, 0x41, 0x50, 0x49, 0x2E,
	0x48, 0x69, 0x64, 0x65, 0x54, 0x65, 0x78, 0x74, 0x54, 0x6F, 0x6F, 0x6C,
	0x74, 0x69, 0x70, 0x28, 0x29, 0x3B, 0x22, 0x3E, 0x0D, 0x0A, 0x09, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x49, 0x6D, 0x61, 0x67, 0x65, 0x20,
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x3D, 0x22, 0x33, 0x32, 0x22, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75,
	0x72, 0x65, 0x77, 0x69, 0x64, 0x74, 0x68, 0x3D, 0x22, 0x2D, 0x31, 0x22,
	0x20, 0x73, 0x72, 0x63, 0x3D, 0x22, 0x66, 0x69, 0x6C, 0x65, 0x3A, 0x2F,
	0x2F, 0x7B, 0x69, 0x6D, 0x61, 0x67, 0x65, 0x73, 0x7D, 0x2F, 0x69, 0x63,
	0x6F, 0x6E, 0x73, 0x2F, 0x75, 0x69, 0x2F, 0x72, 0x65, 0x70, 0x6F, 0x72,
	0x74, 0x5F, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2E, 0x73, 0x76, 0x67,
	0x22, 0x20, 0x2F, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x3C, 0x2F, 0x42, 0x75, 0x74, 0x74, 0x6F, 0x6E, 0x3E, 0x0D, 0x0A, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0D,
	0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x42, 0x75, 0x74, 0x74,
	0x6F, 0x6E, 0x20, 0x69, 0x64, 0x3D, 0x22, 0x4D, 0x61, 0x69, 0x6E, 0x4D,
	0x65, 0x6E, 0x75, 0x4E, 0x61, 0x76, 0x42, 0x61, 0x72, 0x53, 0x68, 0x6F,
	0x77, 0x43, 0x6F, 0x6D, 0x6D, 0x75, 0x6E, 0x69, 0x74, 0x79, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x42, 0x72, 0x6F, 0x77, 0x73, 0x65, 0x72, 0x22,
	0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x63,
	0x6C, 0x61, 0x73, 0x73, 0x3D, 0x22, 0x6D, 0x61, 0x69, 0x6E, 0x6D, 0x65,
	0x6E, 0x75, 0x2D, 0x6E, 0x61, 0x76, 0x62, 0x61, 0x72, 0x5F, 0x5F, 0x62,
	0x74, 0x6E, 0x2D, 0x73, 0x6D, 0x61, 0x6C, 0x6C, 0x20, 0x50, 0x61, 0x75,
	0x73, 0x65, 0x4D, 0x65, 0x6E, 0x75, 0x4D, 0x6F, 0x64, 0x65, 0x4F, 0x6E,
	0x6C, 0x79, 0x22, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x09, 0x6F, 0x6E, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x3D, 0x22, 0x47, 0x61, 0x6D, 0x65, 0x49, 0x6E, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x41, 0x50, 0x49, 0x2E, 0x43, 0x6F, 0x6E, 0x73, 0x6F,
	0x6C, 0x65, 0x43, 0x6F, 0x6D, 0x6D, 0x61, 0x6E, 0x64, 0x28, 0x20, 0x27,
	0x67, 0x61, 0x6D, 0x65, 0x6D, 0x65, 0x6E, 0x75, 0x63, 0x6F, 0x6D, 0x6D,
	0x61, 0x6E, 0x64, 0x20, 0x6F, 0x70, 0x65, 0x6E, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x62, 0x72, 0x6F, 0x77, 0x73, 0x65, 0x72, 0x27, 0x20, 0x29,
	0x22, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x6F, 0x6E, 0x63, 0x6F, 0x6E, 0x74, 0x65, 0x78, 0x74, 0x6D, 0x65, 0x6E,
	0x75, 0x3D, 0x22, 0x47, 0x61, 0x6D, 0x65, 0x49, 0x6E, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x41, 0x50, 0x49, 0x2E, 0x43, 0x6F, 0x6E, 0x73,
	0x6F, 0x6C, 0x65, 0x43, 0x6F, 0x6D, 0x6D, 0x61, 0x6E, 0x64, 0x28, 0x20,
	0x27, 0x67, 0x61, 0x6D, 0x65, 0x6D, 0x65, 0x6E, 0x75, 0x63, 0x6F, 0x6D,
	0x6D, 0x61, 0x6E, 0x64, 0x20, 0x6F, 0x70, 0x65, 0x6E, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x62, 0x72, 0x6F, 0x77, 0x73, 0x65, 0x72, 0x27, 0x20,
	0x29, 0x22, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x6F, 0x6E, 0x6D, 0x6F, 0x75, 0x73, 0x65, 0x6F, 0x76, 0x65, 0x72,
	0x3D, 0x22, 0x55, 0x69, 0x54, 0x6F, 0x6F, 0x6C, 0x6B, 0x69, 0x74, 0x41,
	0x50, 0x49, 0x2E, 0x53, 0x68, 0x6F, 0x77, 0x54, 0x65, 0x78, 0x74, 0x54,
	0x6F, 0x6F, 0x6C, 0x74, 0x69, 0x70, 0x28, 0x20, 0x27, 0x4D, 0x61, 0x69,
	0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x4E, 0x61, 0x76, 0x42, 0x61, 0x72, 0x53,
	0x68, 0x6F, 0x77, 0x43, 0x6F, 0x6D, 0x6D, 0x75, 0x6E, 0x69, 0x74, 0x79,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x42, 0x72, 0x6F, 0x77, 0x73, 0x65,
	0x72, 0x27, 0x2C, 0x20, 0x27, 0x23, 0x70, 0x6C, 0x61, 0x79, 0x5F, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6E, 0x67, 0x5F, 0x63, 0x6F, 0x6D, 0x6D, 0x75,
	0x6E, 0x69, 0x74, 0x79, 0x27, 0x20, 0x29, 0x3B, 0x22, 0x0D, 0x0A, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x6F, 0x6E, 0x6D, 0x6F,
	0x75, 0x73, 0x65, 0x6F, 0x75, 0x74, 0x3D, 0x22, 0x55, 0x69, 0x54, 0x6F,
	0x6F, 0x6C, 0x6B, 0x69, 0x74, 0x41, 0x50, 0x49, 0x2E, 0x48, 0x69, 0x64,
	0x65, 0x54, 0x65, 0x78, 0x74, 0x54, 0x6F, 0x6F, 0x6C, 0x74, 0x69, 0x70,
	0x28, 0x29, 0x3B, 0x22, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x09, 0x3C, 0x49, 0x6D, 0x61, 0x67, 0x65, 0x20, 0x74, 0x65, 0x78,
	0x74, 0x75, 0x72, 0x65, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x3D, 0x22,
	0x33, 0x32, 0x22, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x3D, 0x22, 0x2D, 0x31, 0x22, 0x20, 0x73, 0x72,
	0x63, 0x3D, 0x22, 0x66, 0x69, 0x6C, 0x65, 0x3A, 0x2F, 0x2F, 0x7B, 0x69,
	0x6D, 0x61, 0x67, 0x65, 0x73, 0x7D, 0x2F, 0x69, 0x63, 0x6F, 0x6E, 0x73,
	0x2F, 0x75, 0x69, 0x2F, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x2E,
	0x73, 0x76, 0x67, 0x22, 0x20, 0x2F, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09,
	0x09, 0x09, 0x09, 0x3C, 0x2F, 0x42, 0x75, 0x74, 0x74, 0x6F, 0x6E, 0x3E,
	0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0D,
	0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x52, 0x61, 0x64, 0x69,
	0x6F, 0x42, 0x75, 0x74, 0x74, 0x6F, 0x6E, 0x20, 0x69, 0x64, 0x3D, 0x22,
	0x4D, 0x61, 0x69, 0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x4E, 0x61, 0x76, 0x42,
	0x61, 0x72, 0x49, 0x6E, 0x76, 0x65, 0x6E, 0x74, 0x6F, 0x72, 0x79, 0x22,
	0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x63,
	0x6C, 0x61, 0x73, 0x73, 0x3D, 0x22, 0x6D, 0x61, 0x69, 0x6E, 0x6D, 0x65,
	0x6E, 0x75, 0x2D, 0x6E, 0x61, 0x76, 0x62, 0x61, 0x72, 0x5F, 0x5F, 0x62,
	0x74, 0x6E, 0x2D, 0x73, 0x6D, 0x61, 0x6C, 0x6C, 0x22, 0x0D, 0x0A, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x67, 0x72, 0x6F, 0x75,
	0x70, 0x3D, 0x22, 0x4E, 0x61, 0x76, 0x42, 0x61, 0x72, 0x22, 0x20, 0x0D,
	0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x6F, 0x6E,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x3D, 0x22, 0x4D, 0x61,
	0x69, 0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x2E, 0x4E, 0x61, 0x76, 0x69, 0x67,
	0x61, 0x74, 0x65, 0x54, 0x6F, 0x54, 0x61, 0x62, 0x28, 0x27, 0x4A, 0x73,
	0x49, 0x6E, 0x76, 0x65, 0x6E, 0x74, 0x6F, 0x72, 0x79, 0x27, 0x2C, 0x20,
	0x27, 0x6D, 0x61, 0x69, 0x6E, 0x6D, 0x65, 0x6E, 0x75, 0x5F, 0x69, 0x6E,
	0x76, 0x65, 0x6E, 0x74, 0x6F, 0x72, 0x79, 0x27, 0x29, 0x3B, 0x22, 0x0D,
	0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x6F, 0x6E,
	0x6D, 0x6F, 0x75, 0x73, 0x65, 0x6F, 0x76, 0x65, 0x72, 0x3D, 0x22, 0x55,
	0x69, 0x54, 0x6F, 0x6F, 0x6C, 0x6B, 0x69, 0x74, 0x41, 0x50, 0x49, 0x2E,
	0x53, 0x68, 0x6F, 0x77, 0x54, 0x65, 0x78, 0x74, 0x54, 0x6F, 0x6F, 0x6C,
	0x74, 0x69, 0x70, 0x28, 0x20, 0x27, 0x4D, 0x61, 0x69, 0x6E, 0x4D, 0x65,
	0x6E, 0x75, 0x4E, 0x61, 0x76, 0x42, 0x61, 0x72, 0x49, 0x6E, 0x76, 0x65,
	0x6E, 0x74, 0x6F, 0x72, 0x79, 0x27, 0x2C, 0x20, 0x27, 0x23, 0x74, 0x6F,
	0x6F, 0x6C, 0x74, 0x69, 0x70, 0x5F, 0x6E, 0x61, 0x76, 0x62, 0x61, 0x72,
	0x5F, 0x69, 0x6E, 0x76, 0x65, 0x6E, 0x74, 0x6F, 0x72, 0x79, 0x27, 0x20,
	0x29, 0x3B, 0x22, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x09, 0x6F, 0x6E, 0x6D, 0x6F, 0x75, 0x73, 0x65, 0x6F, 0x75, 0x74,
	0x3D, 0x22, 0x55, 0x69, 0x54, 0x6F, 0x6F, 0x6C, 0x6B, 0x69, 0x74, 0x41,
	0x50, 0x49, 0x2E, 0x48, 0x69, 0x64, 0x65, 0x54, 0x65, 0x78, 0x74, 0x54,
	0x6F, 0x6F, 0x6C, 0x74, 0x69, 0x70, 0x28, 0x29, 0x3B, 0x22, 0x3E, 0x0D,
	0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x49, 0x6D, 0x61,
	0x67, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x3D, 0x22, 0x33, 0x32, 0x22, 0x20, 0x74, 0x65,
	0x78, 0x74, 0x75, 0x72, 0x65, 0x77, 0x69, 0x64, 0x74, 0x68, 0x3D, 0x22,
	0x2D, 0x31, 0x22, 0x20, 0x73, 0x72, 0x63, 0x3D, 0x22, 0x66, 0x69, 0x6C,
	0x65, 0x3A, 0x2F, 0x2F, 0x7B, 0x69, 0x6D, 0x61, 0x67, 0x65, 0x73, 0x7D,
	0x2F, 0x69, 0x63, 0x6F, 0x6E, 0x73, 0x2F, 0x75, 0x69, 0x2F, 0x69, 0x6E,
	0x76, 0x65, 0x6E, 0x74, 0x6F, 0x72, 0x79, 0x2E, 0x73, 0x76, 0x67, 0x22,
	0x20, 0x2F, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x3C, 0x50, 0x61, 0x6E, 0x65, 0x6C, 0x20, 0x69, 0x64, 0x3D, 0x22, 0x4D,
	0x61, 0x69, 0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x49, 0x6E, 0x76, 0x41, 0x6C,
	0x65, 0x72, 0x74, 0x22, 0x20, 0x63, 0x6C, 0x61, 0x73, 0x73, 0x3D, 0x22,
	0x6E, 0x61, 0x76, 0x62, 0x61, 0x72, 0x2D, 0x62, 0x74, 0x6E, 0x5F, 0x5F,
	0x6E, 0x6F, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6F, 0x6E,
	0x20, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6E, 0x22, 0x3E, 0x0D, 0x0A, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x4C, 0x61, 0x62, 0x65,
	0x6C, 0x20, 0x69, 0x64, 0x3D, 0x22, 0x4D, 0x61, 0x69, 0x6E, 0x4D, 0x65,
	0x6E, 0x75, 0x49, 0x6E, 0x76, 0x41, 0x6C, 0x65, 0x72, 0x74, 0x54, 0x65,
	0x78, 0x74, 0x22, 0x20, 0x63, 0x6C, 0x61, 0x73, 0x73, 0x3D, 0x22, 0x6E,
	0x61, 0x76, 0x62, 0x61, 0x72, 0x2D, 0x62, 0x74, 0x6E, 0x5F, 0x5F, 0x6E,
	0x6F, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x2D,
	0x74, 0x65, 0x78, 0x74, 0x22, 0x20, 0x74, 0x65, 0x78, 0x74, 0x3D, 0x22,
	0x22, 0x2F, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x3C, 0x2F, 0x50, 0x61, 0x6E, 0x65, 0x6C, 0x3E, 0x0D, 0x0A, 0x09, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x3C, 0x2F, 0x52, 0x61, 0x64, 0x69, 0x6F, 0x42,
	0x75, 0x74, 0x74, 0x6F, 0x6E, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x09, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0D,
	0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x52, 0x61, 0x64, 0x69,
	0x6F, 0x42, 0x75, 0x74, 0x74, 0x6F, 0x6E, 0x20, 0x69, 0x64, 0x3D, 0x22,
	0x4D, 0x61, 0x69, 0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x4E, 0x61, 0x76, 0x42,
	0x61, 0x72, 0x57, 0x61, 0x74, 0x63, 0x68, 0x22, 0x0D, 0x0A, 0x09, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x63, 0x6C, 0x61, 0x73, 0x73,
	0x3D, 0x22, 0x6D, 0x61, 0x69, 0x6E, 0x6D, 0x65, 0x6E, 0x75, 0x2D, 0x6E,
	0x61, 0x76, 0x62, 0x61, 0x72, 0x5F, 0x5F, 0x62, 0x74, 0x6E, 0x2D, 0x73,
	0x6D, 0x61, 0x6C, 0x6C, 0x20, 0x4D, 0x61, 0x69, 0x6E, 0x4D, 0x65, 0x6E,
	0x75, 0x4D, 0x6F, 0x64, 0x65, 0x4F, 0x6E, 0x6C, 0x79, 0x22, 0x0D, 0x0A,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x67, 0x72, 0x6F,
	0x75, 0x70, 0x3D, 0x22, 0x4E, 0x61, 0x76, 0x42, 0x61, 0x72, 0x22, 0x0D,
	0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x6F, 0x6E,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x3D, 0x22, 0x4D, 0x61,
	0x69, 0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x2E, 0x4E, 0x61, 0x76, 0x69, 0x67,
	0x61, 0x74, 0x65, 0x54, 0x6F, 0x54, 0x61, 0x62, 0x28, 0x27, 0x4A, 0x73,
	0x57, 0x61, 0x74, 0x63, 0x68, 0x27, 0x2C, 0x20, 0x27, 0x6D, 0x61, 0x69,
	0x6E, 0x6D, 0x65, 0x6E, 0x75, 0x5F, 0x77, 0x61, 0x74, 0x63, 0x68, 0x27,
	0x29, 0x3B, 0x22, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x09, 0x6F, 0x6E, 0x6D, 0x6F, 0x75, 0x73, 0x65, 0x6F, 0x76, 0x65,
	0x72, 0x3D, 0x22, 0x55, 0x69, 0x54, 0x6F, 0x6F, 0x6C, 0x6B, 0x69, 0x74,
	0x41, 0x50, 0x49, 0x2E, 0x53, 0x68, 0x6F, 0x77, 0x54, 0x65, 0x78, 0x74,
	0x54, 0x6F, 0x6F, 0x6C, 0x74, 0x69, 0x70, 0x28, 0x20, 0x27, 0x4D, 0x61,
	0x69, 0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x4E, 0x61, 0x76, 0x42, 0x61, 0x72,
	0x57, 0x61, 0x74, 0x63, 0x68, 0x27, 0x2C, 0x20, 0x27, 0x23, 0x74, 0x6F,
	0x6F, 0x6C, 0x74, 0x69, 0x70, 0x5F, 0x6E, 0x61, 0x76, 0x62, 0x61, 0x72,
	0x5F, 0x77, 0x61, 0x74, 0x63, 0x68, 0x27, 0x20, 0x29, 0x3B, 0x22, 0x0D,
	0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x6F, 0x6E,
	0x6D, 0x6F, 0x75, 0x73, 0x65, 0x6F, 0x75, 0x74, 0x3D, 0x22, 0x55, 0x69,
	0x54, 0x6F, 0x6F, 0x6C, 0x6B, 0x69, 0x74, 0x41, 0x50, 0x49, 0x2E, 0x48,
	0x69, 0x64, 0x65, 0x54, 0x65, 0x78, 0x74, 0x54, 0x6F, 0x6F, 0x6C, 0x74,
	0x69, 0x70, 0x28, 0x29, 0x3B, 0x22, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x3C, 0x49, 0x6D, 0x61, 0x67, 0x65, 0x20, 0x74,
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x3D, 0x22, 0x33, 0x34, 0x22, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72,
	0x65, 0x77, 0x69, 0x64, 0x74, 0x68, 0x3D, 0x22, 0x2D, 0x31, 0x22, 0x20,
	0x73, 0x72, 0x63, 0x3D, 0x22, 0x66, 0x69, 0x6C, 0x65, 0x3A, 0x2F, 0x2F,
	0x7B, 0x69, 0x6D, 0x61, 0x67, 0x65, 0x73, 0x7D, 0x2F, 0x69, 0x63, 0x6F,
	0x6E, 0x73, 0x2F, 0x75, 0x69, 0x2F, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5F,
	0x74, 0x76, 0x2E, 0x73, 0x76, 0x67, 0x22, 0x20, 0x2F, 0x3E, 0x0D, 0x0A,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x2F, 0x52, 0x61, 0x64, 0x69,
	0x6F, 0x42, 0x75, 0x74, 0x74, 0x6F, 0x6E, 0x3E, 0x0D, 0x0A, 0x09, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x3C, 0x52, 0x61, 0x64, 0x69, 0x6F, 0x42, 0x75, 0x74, 0x74, 0x6F,
	0x6E, 0x20, 0x69, 0x64, 0x3D, 0x22, 0x4D, 0x61, 0x69, 0x6E, 0x4D, 0x65,
	0x6E, 0x75, 0x4E, 0x61, 0x76, 0x42, 0x61, 0x72, 0x4F, 0x76, 0x65, 0x72,
	0x77, 0x61, 0x74, 0x63, 0x68, 0x22, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x63, 0x6C, 0x61, 0x73, 0x73, 0x3D, 0x22,
	0x6D, 0x61, 0x69, 0x6E, 0x6D, 0x65, 0x6E, 0x75, 0x2D, 0x6E, 0x61, 0x76,
	0x62, 0x61, 0x72, 0x5F, 0x5F, 0x62, 0x74, 0x6E, 0x2D, 0x73, 0x6D, 0x61,
	0x6C, 0x6C, 0x20, 0x4D, 0x61, 0x69, 0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x4D,
	0x6F, 0x64, 0x65, 0x4F, 0x6E, 0x6C, 0x79, 0x22, 0x0D, 0x0A, 0x09, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x67, 0x72, 0x6F, 0x75, 0x70,
	0x3D, 0x22, 0x4E, 0x61, 0x76, 0x42, 0x61, 0x72, 0x22, 0x0D, 0x0A, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x6F, 0x6E, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x3D, 0x22, 0x4D, 0x61, 0x69, 0x6E,
	0x4D, 0x65, 0x6E, 0x75, 0x2E, 0x4E, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74,
	0x65, 0x54, 0x6F, 0x54, 0x61, 0x62, 0x28, 0x27, 0x4A, 0x73, 0x4F, 0x76,
	0x65, 0x72, 0x77, 0x61, 0x74, 0x63, 0x68, 0x27, 0x2C, 0x20, 0x27, 0x6D,
	0x61, 0x69, 0x6E, 0x6D, 0x65, 0x6E, 0x75, 0x5F, 0x6F, 0x76, 0x65, 0x72,
	0x77, 0x61, 0x74, 0x63, 0x68, 0x27, 0x29, 0x3B, 0x22, 0x0D, 0x0A, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x6F, 0x6E, 0x6D, 0x6F,
	0x75, 0x73, 0x65, 0x6F, 0x76, 0x65, 0x72, 0x3D, 0x22, 0x55, 0x69, 0x54,
	0x6F, 0x6F, 0x6C, 0x6B, 0x69, 0x74, 0x41, 0x50, 0x49, 0x2E, 0x53, 0x68,
	0x6F, 0x77, 0x54, 0x65, 0x78, 0x74, 0x54, 0x6F, 0x6F, 0x6C, 0x74, 0x69,
	0x70, 0x28, 0x20, 0x27, 0x4D, 0x61, 0x69, 0x6E, 0x4D, 0x65, 0x6E, 0x75,
	0x4E, 0x61, 0x76, 0x42, 0x61, 0x72, 0x4F, 0x76, 0x65, 0x72, 0x77, 0x61,
	0x74, 0x63, 0x68, 0x27, 0x2C, 0x20, 0x27, 0x23, 0x74, 0x6F, 0x6F, 0x6C,
	0x74, 0x69, 0x70, 0x5F, 0x6E, 0x61, 0x76, 0x62, 0x61, 0x72, 0x5F, 0x6F,
	0x76, 0x65, 0x72, 0x77, 0x61, 0x74, 0x63, 0x68, 0x27, 0x20, 0x29, 0x3B,
	0x22, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x6F, 0x6E, 0x6D, 0x6F, 0x75, 0x73, 0x65, 0x6F, 0x75, 0x74, 0x3D, 0x22,
	0x55, 0x69, 0x54, 0x6F, 0x6F, 0x6C, 0x6B, 0x69, 0x74, 0x41, 0x50, 0x49,
	0x2E, 0x48, 0x69, 0x64, 0x65, 0x54, 0x65, 0x78, 0x74, 0x54, 0x6F, 0x6F,
	0x6C, 0x74, 0x69, 0x70, 0x28, 0x29, 0x3B, 0x22, 0x3E, 0x0D, 0x0A, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x49, 0x6D, 0x61, 0x67, 0x65,
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x3D, 0x22, 0x33, 0x32, 0x22, 0x20, 0x74, 0x65, 0x78, 0x74,
	0x75, 0x72, 0x65, 0x77, 0x69, 0x64, 0x74, 0x68, 0x3D, 0x22, 0x2D, 0x31,
	0x22, 0x20, 0x73, 0x72, 0x63, 0x3D, 0x22, 0x66, 0x69, 0x6C, 0x65, 0x3A,
	0x2F, 0x2F, 0x7B, 0x69, 0x6D, 0x61, 0x67, 0x65, 0x73, 0x7D, 0x2F, 0x69,
	0x63, 0x6F, 0x6E, 0x73, 0x2F, 0x75, 0x69, 0x2F, 0x6F, 0x76, 0x65, 0x72,
	0x77, 0x61, 0x74, 0x63, 0x68, 0x2E, 0x73, 0x76, 0x67, 0x22, 0x20, 0x2F,
	0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x50,
	0x61, 0x6E, 0x65, 0x6C, 0x20, 0x69, 0x64, 0x3D, 0x22, 0x4D, 0x61, 0x69,
	0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x4F, 0x76, 0x65, 0x72, 0x77, 0x61, 0x74,
	0x63, 0x68, 0x41, 0x6C, 0x65, 0x72, 0x74, 0x22, 0x20, 0x63, 0x6C, 0x61,
	0x73, 0x73, 0x3D, 0x22, 0x6E, 0x61, 0x76, 0x62, 0x61, 0x72, 0x2D, 0x62,
	0x74, 0x6E, 0x5F, 0x5F, 0x6E, 0x6F, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6F, 0x6E, 0x20, 0x6F, 0x76, 0x65, 0x72, 0x77, 0x61, 0x74,
	0x63, 0x68, 0x22, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x09, 0x3C, 0x4C, 0x61, 0x62, 0x65, 0x6C, 0x20, 0x69, 0x64, 0x3D,
	0x22, 0x4D, 0x61, 0x69, 0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x4F, 0x76, 0x65,
	0x72, 0x77, 0x61, 0x74, 0x63, 0x68, 0x41, 0x6C, 0x65, 0x72, 0x74, 0x54,
	0x65, 0x78, 0x74, 0x22, 0x20, 0x63, 0x6C, 0x61, 0x73, 0x73, 0x3D, 0x22,
	0x6E, 0x61, 0x76, 0x62, 0x61, 0x72, 0x2D, 0x62, 0x74, 0x6E, 0x5F, 0x5F,
	0x6E, 0x6F, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6F, 0x6E,
	0x2D, 0x74, 0x65, 0x78, 0x74, 0x22, 0x20, 0x74, 0x65, 0x78, 0x74, 0x3D,
	0x22, 0x2B, 0x22, 0x2F, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x09, 0x3C, 0x2F, 0x50, 0x61, 0x6E, 0x65, 0x6C, 0x3E, 0x0D, 0x0A,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x2F, 0x52, 0x61, 0x64, 0x69,
	0x6F, 0x42, 0x75, 0x74, 0x74, 0x6F, 0x6E, 0x3E, 0x0D, 0x0A, 0x09, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x09, 0x3C, 0x52, 0x61, 0x64, 0x69, 0x6F, 0x42, 0x75, 0x74, 0x74,
	0x6F, 0x6E, 0x20, 0x69, 0x64, 0x3D, 0x22, 0x4D, 0x61, 0x69, 0x6E, 0x4D,
	0x65, 0x6E, 0x75, 0x4E, 0x61, 0x76, 0x42, 0x61, 0x72, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6E, 0x67, 0x73, 0x22, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x63, 0x6C, 0x61, 0x73, 0x73, 0x3D, 0x22,
	0x6D, 0x61, 0x69, 0x6E, 0x6D, 0x65, 0x6E, 0x75, 0x2D, 0x6E, 0x61, 0x76,
	0x62, 0x61, 0x72, 0x5F, 0x5F, 0x62, 0x74, 0x6E, 0x2D, 0x73, 0x6D, 0x61,
	0x6C, 0x6C, 0x22, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x09, 0x67, 0x72, 0x6F, 0x75, 0x70, 0x3D, 0x22, 0x4E, 0x61, 0x76,
	0x42, 0x61, 0x72, 0x22, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x09, 0x09, 0x6F, 0x6E, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x3D, 0x22, 0x4D, 0x61, 0x69, 0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x2E,
	0x4E, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x65, 0x54, 0x6F, 0x54, 0x61,
	0x62, 0x28, 0x27, 0x4A, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6E, 0x67,
	0x73, 0x27, 0x2C, 0x20, 0x27, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6E, 0x67,
	0x73, 0x2F, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6E, 0x67, 0x73, 0x27, 0x29,
	0x3B, 0x22, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x6F, 0x6E, 0x6D, 0x6F, 0x75, 0x73, 0x65, 0x6F, 0x76, 0x65, 0x72,
	0x3D, 0x22, 0x55, 0x69, 0x54, 0x6F, 0x6F, 0x6C, 0x6B, 0x69, 0x74, 0x41,
	0x50, 0x49, 0x2E, 0x53, 0x68, 0x6F, 0x77, 0x54, 0x65, 0x78, 0x74, 0x54,
	0x6F, 0x6F, 0x6C, 0x74, 0x69, 0x70, 0x28, 0x20, 0x27, 0x4D, 0x61, 0x69,
	0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x4E, 0x61, 0x76, 0x42, 0x61, 0x72, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6E, 0x67, 0x73, 0x27, 0x2C, 0x20, 0x27, 0x23,
	0x74, 0x6F, 0x6F, 0x6C, 0x74, 0x69, 0x70, 0x5F, 0x6E, 0x61, 0x76, 0x62,
	0x61, 0x72, 0x5F, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6E, 0x67, 0x73, 0x27,
	0x20, 0x29, 0x3B, 0x22, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x09, 0x09, 0x6F, 0x6E, 0x6D, 0x6F, 0x75, 0x73, 0x65, 0x6F, 0x75,
	0x74, 0x3D, 0x22, 0x55, 0x69, 0x54, 0x6F, 0x6F, 0x6C, 0x6B, 0x69, 0x74,
	0x41, 0x50, 0x49, 0x2E, 0x48, 0x69, 0x64, 0x65, 0x54, 0x65, 0x78, 0x74,
	0x54, 0x6F, 0x6F, 0x6C, 0x74, 0x69, 0x70, 0x28, 0x29, 0x3B, 0x22, 0x3E,
	0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x49, 0x6D,
	0x61, 0x67, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x3D, 0x22, 0x33, 0x32, 0x22, 0x20, 0x74,
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x77, 0x69, 0x64, 0x74, 0x68, 0x3D,
	0x22, 0x2D, 0x31, 0x22, 0x20, 0x73, 0x72, 0x63, 0x3D, 0x22, 0x66, 0x69,
	0x6C, 0x65, 0x3A, 0x2F, 0x2F, 0x7B, 0x69, 0x6D, 0x61, 0x67, 0x65, 0x73,
	0x7D, 0x2F, 0x69, 0x63, 0x6F, 0x6E, 0x73, 0x2F, 0x75, 0x69, 0x2F, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6E, 0x67, 0x73, 0x2E, 0x73, 0x76, 0x67, 0x22,
	0x20, 0x2F, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x3C,
	0x2F, 0x52, 0x61, 0x64, 0x69, 0x6F, 0x42, 0x75, 0x74, 0x74, 0x6F, 0x6E,
	0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0D, 0x0A,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0D,
	0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0D, 0x0A, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x09, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0D, 0x0A, 0x09, 0x09, 0x09,
	0x09, 0x09, 0x09, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x09, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0D, 0x0A, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0D, 0x0A,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0D,
	0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0D,
	0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0D, 0x0A,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0D,
	0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0D, 0x0A,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0D, 0x0A, 0x09, 0x09, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0D, 0x0A, 0x09, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0D, 0x0A, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0D, 0x0A, 0x09, 0x09, 0x09,
	0x09, 0x09, 0x09, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x0D, 0x0A, 0x09, 0x09, 0x0D, 0x0A, 0x09, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x3C, 0x50, 0x61, 0x6E, 0x65, 0x6C, 0x20, 0x63,
	0x6C, 0x61, 0x73, 0x73, 0x3D, 0x22, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63,
	0x61, 0x6C, 0x2D, 0x61, 0x6C, 0x69, 0x67, 0x6E, 0x2D, 0x62, 0x6F, 0x74,
	0x74, 0x6F, 0x6D, 0x20, 0x68, 0x6F, 0x72, 0x69, 0x7A, 0x6F, 0x6E, 0x74,
	0x61, 0x6C, 0x2D, 0x63, 0x65, 0x6E, 0x74, 0x65, 0x72, 0x22, 0x3E, 0x0D,
	0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x3C, 0x42, 0x75, 0x74, 0x74, 0x6F, 0x6E, 0x20, 0x69, 0x64, 0x3D,
	0x22, 0x4D, 0x61, 0x69, 0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x4E, 0x61, 0x76,
	0x42, 0x61, 0x72, 0x51, 0x75, 0x69, 0x74, 0x22, 0x0D, 0x0A, 0x09, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x63, 0x6C, 0x61, 0x73,
	0x73, 0x3D, 0x22, 0x6D, 0x61, 0x69, 0x6E, 0x6D, 0x65, 0x6E, 0x75, 0x2D,
	0x6E, 0x61, 0x76, 0x62, 0x61, 0x72, 0x5F, 0x5F, 0x62, 0x74, 0x6E, 0x2D,
	0x73, 0x6D, 0x61, 0x6C, 0x6C, 0x20, 0x4D, 0x61, 0x69, 0x6E, 0x4D, 0x65,
	0x6E, 0x75, 0x4D, 0x6F, 0x64, 0x65, 0x4F, 0x6E, 0x6C, 0x79, 0x22, 0x0D,
	0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x6F,
	0x6E, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x3D, 0x22, 0x4D,
	0x61, 0x69, 0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x2E, 0x4F, 0x6E, 0x51, 0x75,
	0x69, 0x74, 0x42, 0x75, 0x74, 0x74, 0x6F, 0x6E, 0x50, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x64, 0x28, 0x29, 0x3B, 0x20, 0x24, 0x2E, 0x44, 0x69, 0x73,
	0x70, 0x61, 0x74, 0x63, 0x68, 0x45, 0x76, 0x65, 0x6E, 0x74, 0x28, 0x20,
	0x27, 0x50, 0x6C, 0x61, 0x79, 0x53, 0x6F, 0x75, 0x6E, 0x64, 0x45, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x27, 0x2C, 0x20, 0x27, 0x55, 0x49, 0x50, 0x61,
	0x6E, 0x6F, 0x72, 0x61, 0x6D, 0x61, 0x2E, 0x6D, 0x61, 0x69, 0x6E, 0x6D,
	0x65, 0x6E, 0x75, 0x5F, 0x70, 0x72, 0x65, 0x73, 0x73, 0x5F, 0x71, 0x75,
	0x69, 0x74, 0x27, 0x2C, 0x20, 0x27, 0x4D, 0x4F, 0x55, 0x53, 0x45, 0x27,
	0x20, 0x29, 0x3B, 0x22, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x6F, 0x6E, 0x6D, 0x6F, 0x75, 0x73, 0x65, 0x6F,
	0x76, 0x65, 0x72, 0x3D, 0x22, 0x55, 0x69, 0x54, 0x6F, 0x6F, 0x6C, 0x6B,
	0x69, 0x74, 0x41, 0x50, 0x49, 0x2E, 0x53, 0x68, 0x6F, 0x77, 0x54, 0x65,
	0x78, 0x74, 0x54, 0x6F, 0x6F, 0x6C, 0x74, 0x69, 0x70, 0x28, 0x20, 0x27,
	0x4D, 0x61, 0x69, 0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x4E, 0x61, 0x76, 0x42,
	0x61, 0x72, 0x51, 0x75, 0x69, 0x74, 0x27, 0x2C, 0x20, 0x27, 0x23, 0x74,
	0x6F, 0x6F, 0x6C, 0x74, 0x69, 0x70, 0x5F, 0x6E, 0x61, 0x76, 0x62, 0x61,
	0x72, 0x5F, 0x71, 0x75, 0x69, 0x74, 0x27, 0x20, 0x29, 0x3B, 0x22, 0x0D,
	0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x6F,
	0x6E, 0x6D, 0x6F, 0x75, 0x73, 0x65, 0x6F, 0x75, 0x74, 0x3D, 0x22, 0x55,
	0x69, 0x54, 0x6F, 0x6F, 0x6C, 0x6B, 0x69, 0x74, 0x41, 0x50, 0x49, 0x2E,
	0x48, 0x69, 0x64, 0x65, 0x54, 0x65, 0x78, 0x74, 0x54, 0x6F, 0x6F, 0x6C,
	0x74, 0x69, 0x70, 0x28, 0x29, 0x3B, 0x22, 0x3E, 0x0D, 0x0A, 0x09, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x49, 0x6D, 0x61, 0x67, 0x65,
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x3D, 0x22, 0x33, 0x32, 0x22, 0x20, 0x74, 0x65, 0x78, 0x74,
	0x75, 0x72, 0x65, 0x77, 0x69, 0x64, 0x74, 0x68, 0x3D, 0x22, 0x2D, 0x31,
	0x22, 0x20, 0x73, 0x72, 0x63, 0x3D, 0x22, 0x66, 0x69, 0x6C, 0x65, 0x3A,
	0x2F, 0x2F, 0x7B, 0x69, 0x6D, 0x61, 0x67, 0x65, 0x73, 0x7D, 0x2F, 0x69,
	0x63, 0x6F, 0x6E, 0x73, 0x2F, 0x75, 0x69, 0x2F, 0x70, 0x6F, 0x77, 0x65,
	0x72, 0x2E, 0x73, 0x76, 0x67, 0x22, 0x20, 0x2F, 0x3E, 0x0D, 0x0A, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x2F, 0x42, 0x75, 0x74, 0x74,
	0x6F, 0x6E, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x3C,
	0x42, 0x75, 0x74, 0x74, 0x6F, 0x6E, 0x20, 0x69, 0x64, 0x3D, 0x22, 0x4D,
	0x61, 0x69, 0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x4E, 0x61, 0x76, 0x42, 0x61,
	0x72, 0x45, 0x78, 0x69, 0x74, 0x47, 0x61, 0x6D, 0x65, 0x22, 0x0D, 0x0A,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x63, 0x6C,
	0x61, 0x73, 0x73, 0x3D, 0x22, 0x6D, 0x61, 0x69, 0x6E, 0x6D, 0x65, 0x6E,
	0x75, 0x2D, 0x6E, 0x61, 0x76, 0x62, 0x61, 0x72, 0x5F, 0x5F, 0x62, 0x74,
	0x6E, 0x2D, 0x73, 0x6D, 0x61, 0x6C, 0x6C, 0x20, 0x50, 0x61, 0x75, 0x73,
	0x65, 0x4D, 0x65, 0x6E, 0x75, 0x4D, 0x6F, 0x64, 0x65, 0x4F, 0x6E, 0x6C,
	0x79, 0x22, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x09, 0x6F, 0x6E, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x3D, 0x22, 0x24, 0x2E, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68,
	0x45, 0x76, 0x65, 0x6E, 0x74, 0x28, 0x20, 0x27, 0x43, 0x53, 0x47, 0x4F,
	0x4D, 0x61, 0x69, 0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x44, 0x69, 0x73, 0x63,
	0x6F, 0x6E, 0x6E, 0x65, 0x63, 0x74, 0x27, 0x20, 0x29, 0x3B, 0x22, 0x0D,
	0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x6F,
	0x6E, 0x6D, 0x6F, 0x75, 0x73, 0x65, 0x6F, 0x76, 0x65, 0x72, 0x3D, 0x22,
	0x55, 0x69, 0x54, 0x6F, 0x6F, 0x6C, 0x6B, 0x69, 0x74, 0x41, 0x50, 0x49,
	0x2E, 0x53, 0x68, 0x6F, 0x77, 0x54, 0x65, 0x78, 0x74, 0x54, 0x6F, 0x6F,
	0x6C, 0x74, 0x69, 0x70, 0x28, 0x20, 0x27, 0x4D, 0x61, 0x69, 0x6E, 0x4D,
	0x65, 0x6E, 0x75, 0x4E, 0x61, 0x76, 0x42, 0x61, 0x72, 0x45, 0x78, 0x69,
	0x74, 0x47, 0x61, 0x6D, 0x65, 0x27, 0x2C, 0x20, 0x27, 0x23, 0x74, 0x6F,
	0x6F, 0x6C, 0x74, 0x69, 0x70, 0x5F, 0x6E, 0x61, 0x76, 0x62, 0x61, 0x72,
	0x5F, 0x65, 0x78, 0x69, 0x74, 0x5F, 0x67, 0x61, 0x6D, 0x65, 0x27, 0x20,
	0x29, 0x3B, 0x22, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x09, 0x09, 0x6F, 0x6E, 0x6D, 0x6F, 0x75, 0x73, 0x65, 0x6F, 0x75,
	0x74, 0x3D, 0x22, 0x55, 0x69, 0x54, 0x6F, 0x6F, 0x6C, 0x6B, 0x69, 0x74,
	0x41, 0x50, 0x49, 0x2E, 0x48, 0x69, 0x64, 0x65, 0x54, 0x65, 0x78, 0x74,
	0x54, 0x6F, 0x6F, 0x6C, 0x74, 0x69, 0x70, 0x28, 0x29, 0x3B, 0x22, 0x3E,
	0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x49,
	0x6D, 0x61, 0x67, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x3D, 0x22, 0x33, 0x32, 0x22, 0x20,
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x3D, 0x22, 0x2D, 0x31, 0x22, 0x20, 0x73, 0x72, 0x63, 0x3D, 0x22, 0x66,
	0x69, 0x6C, 0x65, 0x3A, 0x2F, 0x2F, 0x7B, 0x69, 0x6D, 0x61, 0x67, 0x65,
	0x73, 0x7D, 0x2F, 0x69, 0x63, 0x6F, 0x6E, 0x73, 0x2F, 0x75, 0x69, 0x2F,
	0x63, 0x61, 0x6E, 0x63, 0x65, 0x6C, 0x2E, 0x73, 0x76, 0x67, 0x22, 0x20,
	0x2F, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x3C,
	0x2F, 0x42, 0x75, 0x74, 0x74, 0x6F, 0x6E, 0x3E, 0x0D, 0x0A, 0x09, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x3C, 0x2F, 0x50, 0x61, 0x6E, 0x65, 0x6C, 0x3E,
	0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x2F, 0x50, 0x61, 0x6E,
	0x65, 0x6C, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x2F, 0x43,
	0x53, 0x47, 0x4F, 0x42, 0x6C, 0x75, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x3E, 0x0D, 0x0A, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x43,
	0x53, 0x47, 0x4F, 0x42, 0x6C, 0x75, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x20, 0x69, 0x64, 0x3D, 0x22, 0x4D, 0x61, 0x69, 0x6E, 0x4D, 0x65,
	0x6E, 0x75, 0x46, 0x72, 0x69, 0x65, 0x6E, 0x64, 0x73, 0x41, 0x6E, 0x64,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x22, 0x20, 0x68, 0x69, 0x74, 0x74, 0x65,
	0x73, 0x74, 0x3D, 0x22, 0x66, 0x61, 0x6C, 0x73, 0x65, 0x22, 0x20, 0x62,
	0x6C, 0x75, 0x72, 0x72, 0x65, 0x63, 0x74, 0x73, 0x3D, 0x22, 0x43, 0x53,
	0x47, 0x4F, 0x4C, 0x6F, 0x61, 0x64, 0x69, 0x6E, 0x67, 0x53, 0x63, 0x72,
	0x65, 0x65, 0x6E, 0x22, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x3C, 0x50, 0x61, 0x6E, 0x65, 0x6C, 0x20, 0x69, 0x64, 0x3D, 0x22, 0x4A,
	0x73, 0x4D, 0x61, 0x69, 0x6E, 0x4D, 0x65, 0x6E, 0x75, 0x53, 0x69, 0x64,
	0x65, 0x62, 0x61, 0x72, 0x22, 0x20, 0x63, 0x6C, 0x61, 0x73, 0x73, 0x3D,
	0x22, 0x6D, 0x61, 0x69, 0x6E, 0x6D, 0x65, 0x6E, 0x75, 0x2D, 0x73, 0x69,
	0x64, 0x65, 0x62, 0x61, 0x72, 0x22, 0x20, 0x68, 0x69, 0x74, 0x74, 0x65,
	0x73, 0x74, 0x3D, 0x22, 0x66, 0x61, 0x6C, 0x73, 0x65, 0x22, 0x3E, 0x0D,
	0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x50, 0x61, 0x6E, 0x65,
	0x6C, 0x20, 0x69, 0x64, 0x3D, 0x22, 0x6D, 0x61, 0x69, 0x6E, 0x6D, 0x65,
	0x6E, 0x75, 0x2D, 0x73, 0x69, 0x64, 0x65, 0x62, 0x61, 0x72, 0x5F, 0x5F,
	0x62, 0x6C, 0x75, 0x72, 0x2D, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22,
	0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x63, 0x6C,
	0x61, 0x73, 0x73, 0x3D, 0x22, 0x6D, 0x61, 0x69, 0x6E, 0x6D, 0x65, 0x6E,
	0x75, 0x2D, 0x73, 0x69, 0x64, 0x65, 0x62, 0x61, 0x72, 0x5F, 0x5F, 0x63,
	0x6F, 0x6E, 0x74, 0x61, 0x69, 0x6E, 0x65, 0x72, 0x22, 0x0D, 0x0A, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x6F, 0x6E, 0x6D, 0x6F, 0x75,
	0x73, 0x65, 0x6F, 0x76, 0x65, 0x72, 0x3D, 0x22, 0x4D, 0x61, 0x69, 0x6E,
	0x4D, 0x65, 0x6E, 0x75, 0x2E, 0x45, 0x78, 0x70, 0x61, 0x6E, 0x64, 0x53,
	0x69, 0x64, 0x65, 0x62, 0x61, 0x72, 0x28, 0x29, 0x22, 0x0D, 0x0A, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x6F, 0x6E, 0x6D, 0x6F, 0x75,
	0x73, 0x65, 0x6F, 0x75, 0x74, 0x3D, 0x22, 0x4D, 0x61, 0x69, 0x6E, 0x4D,
	0x65, 0x6E, 0x75, 0x2E, 0x4D, 0x69, 0x6E, 0x69, 0x6D, 0x69, 0x7A, 0x65,
	0x53, 0x69, 0x64, 0x65, 0x62, 0x61, 0x72, 0x28, 0x29, 0x3B, 0x22, 0x3E,
	0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0D, 0x0A, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x2F, 0x50, 0x61, 0x6E, 0x65, 0x6C,
	0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x50, 0x61,
	0x6E, 0x65, 0x6C, 0x20, 0x63, 0x6C, 0x61, 0x73, 0x73, 0x3D, 0x22, 0x6D,
	0x61, 0x69, 0x6E, 0x6D, 0x65, 0x6E, 0x75, 0x2D, 0x73, 0x69, 0x64, 0x65,
	0x62, 0x61, 0x72, 0x5F, 0x5F, 0x73, 0x65, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6F, 0x72, 0x22, 0x2F, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09,
	0x3C, 0x2F, 0x50, 0x61, 0x6E, 0x65, 0x6C, 0x3E, 0x0D, 0x0A, 0x0D, 0x0A,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x43, 0x53, 0x47, 0x4F, 0x43, 0x68,
	0x61, 0x74, 0x20, 0x69, 0x64, 0x3D, 0x22, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x43, 0x68, 0x61, 0x74, 0x22, 0x20, 0x2F, 0x3E, 0x0D, 0x0A, 0x0D, 0x0A,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x46, 0x72, 0x61, 0x6D, 0x65, 0x20,
	0x69, 0x64, 0x3D, 0x22, 0x4D, 0x61, 0x74, 0x63, 0x68, 0x6D, 0x61, 0x6B,
	0x69, 0x6E, 0x67, 0x52, 0x65, 0x63, 0x6F, 0x6E, 0x6E, 0x65, 0x63, 0x74,
	0x50, 0x61, 0x6E, 0x65, 0x6C, 0x22, 0x20, 0x73, 0x72, 0x63, 0x3D, 0x22,
	0x66, 0x69, 0x6C, 0x65, 0x3A, 0x2F, 0x2F, 0x7B, 0x72, 0x65, 0x73, 0x6F,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x7D, 0x2F, 0x6C, 0x61, 0x79, 0x6F, 0x75,
	0x74, 0x2F, 0x6D, 0x61, 0x74, 0x63, 0x68, 0x2D, 0x72, 0x65, 0x63, 0x6F,
	0x6E, 0x6E, 0x65, 0x63, 0x74, 0x2E, 0x78, 0x6D, 0x6C, 0x22, 0x20, 0x2F,
	0x3E, 0x0D, 0x0A, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x2F, 0x43,
	0x53, 0x47, 0x4F, 0x42, 0x6C, 0x75, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x0D, 0x0A, 0x09, 0x09, 0x09,
	0x3C, 0x2F, 0x50, 0x61, 0x6E, 0x65, 0x6C, 0x3E, 0x0D, 0x0A, 0x09, 0x09,
	0x09, 0x0D, 0x0A, 0x09, 0x09, 0x3C, 0x2F, 0x50, 0x61, 0x6E, 0x65, 0x6C,
	0x3E, 0x3E, 0x0D, 0x0A, 0x0D, 0x0A, 0x09, 0x09, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x0D, 0x0A, 0x09, 0x09, 0x3C, 0x43, 0x53, 0x47, 0x4F,
	0x50, 0x6F, 0x70, 0x75, 0x70, 0x4D, 0x61, 0x6E, 0x61, 0x67, 0x65, 0x72,
	0x20, 0x69, 0x64, 0x3D, 0x22, 0x50, 0x6F, 0x70, 0x75, 0x70, 0x4D, 0x61,
	0x6E, 0x61, 0x67, 0x65, 0x72, 0x22, 0x20, 0x6F, 0x6E, 0x70, 0x6F, 0x70,
	0x75, 0x70, 0x73, 0x64, 0x69, 0x73, 0x6D, 0x69, 0x73, 0x73, 0x65, 0x64,
	0x3D, 0x22, 0x22, 0x20, 0x2F, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x3C, 0x43,
	0x6F, 0x6E, 0x74, 0x65, 0x78, 0x74, 0x4D, 0x65, 0x6E, 0x75, 0x4D, 0x61,
	0x6E, 0x61, 0x67, 0x65, 0x72, 0x20, 0x69, 0x64, 0x3D, 0x22, 0x43, 0x6F,
	0x6E, 0x74, 0x65, 0x78, 0x74, 0x4D, 0x65, 0x6E, 0x75, 0x4D, 0x61, 0x6E,
	0x61, 0x67, 0x65, 0x72, 0x22, 0x20, 0x2F, 0x3E, 0x0D, 0x0A, 0x09, 0x09,
	0x3C, 0x50, 0x61, 0x6E, 0x65, 0x6C, 0x20, 0x69, 0x64, 0x3D, 0x22, 0x49,
	0x74, 0x65, 0x6D, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x44, 0x65,
	0x62, 0x75, 0x67, 0x4D, 0x61, 0x6E, 0x61, 0x67, 0x65, 0x72, 0x22, 0x20,
	0x68, 0x69, 0x74, 0x74, 0x65, 0x73, 0x74, 0x3D, 0x22, 0x66, 0x61, 0x6C,
	0x73, 0x65, 0x22, 0x20, 0x2F, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x3C, 0x43,
	0x53, 0x47, 0x4F, 0x54, 0x6F, 0x6F, 0x6C, 0x74, 0x69, 0x70, 0x4D, 0x61,
	0x6E, 0x61, 0x67, 0x65, 0x72, 0x20, 0x69, 0x64, 0x3D, 0x22, 0x54, 0x6F,
	0x6F, 0x6C, 0x74, 0x69, 0x70, 0x4D, 0x61, 0x6E, 0x61, 0x67, 0x65, 0x72,
	0x22, 0x20, 0x68, 0x69, 0x74, 0x74, 0x65, 0x73, 0x74, 0x3D, 0x22, 0x66,
	0x61, 0x6C, 0x73, 0x65, 0x22, 0x20, 0x2F, 0x3E, 0x0D, 0x0A, 0x0D, 0x0A,
	0x09, 0x09, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x0D, 0x0A, 0x09, 0x09, 0x3C, 0x50, 0x61, 0x6E, 0x65,
	0x6C, 0x20, 0x69, 0x64, 0x3D, 0x22, 0x53, 0x74, 0x65, 0x61, 0x6D, 0x4E,
	0x6F, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x73,
	0x50, 0x6C, 0x61, 0x63, 0x65, 0x68, 0x6F, 0x6C, 0x64, 0x65, 0x72, 0x22,
	0x20, 0x68, 0x69, 0x74, 0x74, 0x65, 0x73, 0x74, 0x3D, 0x22, 0x66, 0x61,
	0x6C, 0x73, 0x65, 0x22, 0x20, 0x2F, 0x3E, 0x0D, 0x0A, 0x09, 0x3C, 0x2F,
	0x43, 0x53, 0x47, 0x4F, 0x4D, 0x61, 0x69, 0x6E, 0x4D, 0x65, 0x6E, 0x75,
	0x3E, 0x0D, 0x0A, 0x3C, 0x2F, 0x72, 0x6F, 0x6F, 0x74, 0x3E, 0x0D, 0x0A,
	0x00
};
